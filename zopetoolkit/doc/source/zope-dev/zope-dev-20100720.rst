==========
2010-07-20
==========

This is the agenda and summary for the weekly Zope developer meeting of
Tuesday, 2010-07-20 on #zope@irc.freenode.org from 15:00 to 15:30 UTC.

Summary
=======

The IRC log is available here:
    http://zope3.pov.lt/irclogs-zope/%23zope.2010-07-20.log.html#t2010-07-20T17:58:02

Attendees
---------

Jens Vagelpohl, Adam Groszer, Christian Theune, Leo Rochael


Bugday review and planning
--------------------------

Jens Vagelpohl worked on fixing Zope 2 bugs (fixed 5 and worked on 4 others)
and Tres Seaver tried fixing an issue with zope.testing under Python 2.7.

The last bug day has been relatively silent because only few participants
signed up some of them didn't make it. It appears that both holiday season and
scheduling issues kept people from joining.

Jens noted that the wiki page is cumbersome to deal with due to the ReST table
layout. Christian agreed to adapt to a regular list for the next wiki page.

Christian will doodle the next bug day for the week of August 16-20.

Languishing bug review
----------------------

Unfortunately this part of the agenda didn't work out as expected. I tried to
take some time so that everyone present would review some bugs, not talking
about reviewing bugs. I miscommunicated here and talked about some things
while I reviewed bugs thinking everyone did the same ...

Jens reported that Hanno has been and is triaging the Zope 2 bugs and he is
working on the things that can be fixed, too.

We also noted that the term "languish" is not understood the same: the current
meaning in the way the test scripts use it is "new bugs that nobody triaged".
The goal for avoiding languishing bugs is to give feedback to bug reporters in
a timely manner. That doesn't necessarily mean we fix them right away but we
can respond whether it is indeed a bug, or misunderstanding or a feature
request. This should give our users a better feeling on how we are going to
deal with an issue in the long run.

I asked for a reminder of whether we agreed to put minimum version dependency
requirements into setup.py or not. Nobody could remember and we couldn't
produce reference material on a decision but we think that minimum
requirements were agreed upon to be ok.


Agenda
======

- Review last bug day, plan for next

- Review languishing bugs. (See
  https://mail.zope.org/pipermail/zope-tests/2010-July/016049.html,
  https://mail.zope.org/pipermail/zope-tests/2010-July/016050.html,
  https://mail.zope.org/pipermail/zope-tests/2010-July/016051.html,
  https://mail.zope.org/pipermail/zope-tests/2010-July/016052.html)


Ongoing issues
--------------

Those issues are currently ongoing. We don't have to discuss them. We just
need to follow up on them eventually.

- Abandoned projects (Tres)

- Expectations for the upcoming Zope summit?

- Meta
    - Review meeting itself, maybe add extra 15 minutes for "meta" once a
      month or every two months? (postponed until 2010-06-01)
    - How to organize open issues in the long run (Blueprints?
      Other tool? Continue text files?)

- ZTK status
    - Towards a ZTK release
        - Documentation
        - Release scope

- Test runners / nightly builds
    - Windows
        - Compiler licenses (Tres, postponed until after 2010-06-14)
        - Win egg builder (Adam)
        - Documentation about VM setup (Adam)
    - Supporting Python 2.7
        - Needs help from the buildbots

- Documentation
    - Consolidate "floating" documentation into Sphinx/docs.zope.org
        - write blueprint for the consolidation effort (Theuni)
        - Find candidate links and gather them centrally
        - Edit/update the documentation from the link list and
          land in Sphinx-style during a sprint
    - Turn ZTK package documentation into sphinx style (like zope.event)
        - write bug and assign to toolkit projects (Theuni)
    - Provide package documentation under docs.zope.org/<packagename> and keep
      updated based on the projects' trunks. (Jens)

- Releases
    - How to find a good point when to cut a new release for a package for
      which fixed bugs where registered (or changes have been made)? Any
      automation possible to alert us when changes have been sitting around
      unreleased for a while?

Topic proposals
---------------

- Chris McDonough: Pondering *some* (re-)structuring of the ZTK to allow for
  better maintenance/release management/communication/marketing. 

- Christian Theune: I'd like us to ponder how we can (in addition to the
  housekeeping and cleanups we do) also move to do constructive work together
  to expand the stuff that Zope packages (ZTK) is about. How do we go about
  implementing new technologies together, like supporting HTML 5 in the
  various parts? I'd like to start putting in new code in the foreseeable
  future in the zope.* namespace.
