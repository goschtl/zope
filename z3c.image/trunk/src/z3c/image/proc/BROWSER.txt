=======================
 Processed Image Views
=======================


   >>> from zope.testbrowser.testing import Browser
   >>> from z3c.image.testing import dataDir
   >>> import os
   >>> from zope.app.file.image import getImageInfo
   >>> imagePath = os.path.join(dataDir, 'flower.jpg')
   >>> browser = Browser()
   >>> browser.handleErrors = False
   >>> browser.addHeader('Authorization', 'Basic mgr:mgrpw')
   >>> browser.open('http://localhost/@@contents.html')
   >>> link = browser.getLink('Image')
   >>> link.click()
   >>> dataCtrl = browser.getControl('Data')
   >>> dataCtrl.add_file(file(imagePath, 'rb'), 'image/jpeg', 'flower.jpg')
   >>> browser.getControl('Add').click()

Let us open the standard view of the image

   >>> browser.open('http://localhost/flower.jpg')
   >>> getImageInfo(browser.contents)
   ('image/jpeg', 103, 118)

It must contain the last-modified time of the image.

   >>> browser.headers.getheaders('Last-Modified')
   ['... GMT']


If we do not specify parameters then the image is not processed.

   >>> browser.open('http://localhost/flower.jpg/@@resized')
   >>> getImageInfo(browser.contents)
   ('image/jpeg', 103, 118)

The resized view always keeps the aspect ratio.

   >>> browser.open('http://localhost/flower.jpg/@@resized?w=50')
   >>> getImageInfo(browser.contents)
   ('image/jpeg', 50, 57)

Also if width and height are given. In this case the values are taken
as maximums.

   >>> browser.open('http://localhost/flower.jpg/@@resized?w=50&h=50')
   >>> getImageInfo(browser.contents)
   ('image/jpeg', 44, 50)


   >>> browser.open('http://localhost/flower.jpg/@@resized?w=20&h=50')
   >>> getImageInfo(browser.contents)
   ('image/jpeg', 20, 23)

There is also a processorview, which does processing in the folloing order:

 1. rotate
 2. resize
 3. crop

If we supply not values the original image is returned.

   >>> browser.open('http://localhost/flower.jpg/@@processed')
   >>> getImageInfo(browser.contents)
   ('image/jpeg', 103, 118)

Let us crop the top left 10x10px out of the image.

   >>> browser.open('http://localhost/flower.jpg/@@processed?' +
   ...     'local.crop.h=10&' +
   ...     'local.crop.w=10&' +
   ...     'local.crop.x=0&' +
   ...     'local.crop.y=0&' 
   ...     )
   >>> getImageInfo(browser.contents)
   ('image/jpeg', 10, 10)


We can use 'If-Modified-Since' in the request and get a 304 status.

   >>> browser.addHeader('If-Modified-Since',browser.headers.getheader('Last-Modified'))
   >>> browser.open('http://localhost/flower.jpg/@@resized')
   Traceback (most recent call last):
   ...
   HTTPError: HTTP Error 304: Not Modified

TODO: more tests here
