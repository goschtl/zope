[buildout]
develop = .
          externals/z3c.menu.ready2go
          externals/zam.api
          externals/zam.skin
          externals/z3c.jsontree
          externals/z3c.jsonrpcproxy
          externals/z3c.xmlhttp

parts = app var test checker coverage

[test]
recipe = zc.recipe.testrunner
eggs = zamplugin.navigation [app, test]

[checker]
recipe = lovely.recipe:importchecker
path = src/zamplugin/navigation

[coverage]
recipe = zc.recipe.egg
eggs = z3c.coverage


[app]
recipe = z3c.recipe.dev:app
eggs = zamplugin.navigation [app]
server = zserver
zope.conf =
  ${var:zconfig}

  interrupt-check-interval 50

  <server>
    type WSGI-HTTP
    address 8080
  </server>

  <eventlog>
    <logfile>
      path access.log
    </logfile>
    <logfile>
      path STDOUT
      formatter zope.exceptions.log.Formatter
    </logfile>
  </eventlog>

  <accesslog>
    <logfile>
      path access.log
    </logfile>
    <logfile>
      path STDOUT
    </logfile>
  </accesslog>

  devmode on

site.zcml =
  <!-- Turn on the devmode -->
  <configure
    xmlns:meta="http://namespaces.zope.org/meta"
    xmlns:browser="http://namespaces.zope.org/browser"
    xmlns:mail="http://namespaces.zope.org/mail"
    i18n_domain="zope">

  <!-- Turn on the devmode -->
  <meta:provides feature="devmode" />

  <!-- load meta configuration for exclude -->
  <include package="zc.configuration" file="meta.zcml" />


  <!-- exclude will prevent from include -->
  <exclude package="zope.app.authentication" file="ftpplugins.zcml" />
  <exclude package="zope.app.authentication" file="groupfolder.zcml" />
  <exclude package="zope.app.authentication" file="principalfolder.zcml" />
  <exclude package="zope.app.authentication.browser" />
  <exclude package="zope.app.authentication.browser" file="configure.zcml" />
  <exclude package="zope.app.authentication.browser" file="groupfolder.zcml" />
  <exclude package="zope.app.authentication.browser" file="httpplugins.zcml" />
  <exclude package="zope.app.authentication.browser" file="principalfolder.zcml" />
  <exclude package="zope.app.authentication.browser" file="session.zcml" />
  <exclude package="zope.app.broken" file="browser.zcml" />
  <exclude package="zope.app.container.browser" />
  <exclude package="zope.app.error.browser" />
  <exclude package="zope.app.folder.browser" />
  <exclude package="zope.app.i18n" />
  <exclude package="zope.app.intid.browser" />
  <exclude package="zope.app.securitypolicy.browser" />
  <exclude package="zope.app.session" file="browser.zcml" />
  <exclude package="zope.dublincore.browser" />


  <!-- load zope meta configuration -->
  <include package="zope.app.component" file="meta.zcml" />
  <include package="zope.app.component.browser" file="meta.zcml" />
  <include package="zope.app.container.browser" file="meta.zcml" />
  <include package="zope.app.pagetemplate" file="meta.zcml" />
  <include package="zope.app.publication" file="meta.zcml" />
  <include package="zope.app.publisher" file="meta.zcml" />
  <include package="zope.app.security" file="meta.zcml" />
  <include package="zope.i18n" file="meta.zcml" />
  <include package="zope.security" file="meta.zcml" />
  <include package="zope.securitypolicy" file="meta.zcml" />
  <include package="zope.viewlet" file="meta.zcml" />


  <!-- load 3rd party meta configuration -->
  <include package="z3c.baseregistry" file="meta.zcml" />
  <include package="z3c.form" file="meta.zcml" />
  <include package="z3c.macro" file="meta.zcml" />
  <include package="z3c.pagelet" file="meta.zcml" />
  <include package="z3c.template" file="meta.zcml" />
  <include package="z3c.zrtresource" file="meta.zcml" />
  <include package="z3c.jsonrpc" file="meta.zcml" />


  <!-- vocabulary setup, that's bad and weird, because this is meta configuration -->
  <include package="zope.app.schema" />


  <!-- bootstrap Database -->
  <include package="zope.app.appsetup" />
  <include package="zope.app.zopeappgenerations" />

  <!-- zope server -->
  <include package="zope.app.server" />
  <include package="zope.app.twisted" />
  <include package="zope.app.wsgi" />


  <!-- zope packages -->
  <include package="zope.annotation" />
  <include package="zope.component" />
  <include package="zope.contentprovider" />
  <include package="zope.copypastemove" />
  <include package="zope.dublincore" />
  <include package="zope.error" />
  <include package="zope.location" />
  <include package="zope.publisher" />
  <include package="zope.securitypolicy" />
  <include package="zope.session" />
  <include package="zope.traversing" />
  <include package="zope.traversing.browser" />


  <!-- load zope package configuration -->
  <include package="zope.app.authentication" />
  <include package="zope.app.broken" />
  <include package="zope.app.component" />
  <include package="zope.app.container" />
  <include package="zope.app.folder" />
  <include package="zope.app.http" />
  <include package="zope.app.intid" />
  <include package="zope.app.keyreference" />
  <include package="zope.app.principalannotation" />
  <include package="zope.app.publication" />
  <include package="zope.app.publisher" />
  <include package="zope.app.publisher.browser" />
  <include package="zope.app.security" />
  <include package="zope.app.securitypolicy" />
  <include package="zope.app.session" />


  <!-- load 3rd party configuration -->
  <include package="z3c.breadcrumb" />
  <include package="z3c.form" />
  <include package="z3c.formui" />
  <include package="z3c.layer.pagelet" />
  <include package="z3c.layer.ready2go" />
  <include package="z3c.menu.ready2go" />
  <include package="z3c.macro" />
  <include package="z3c.pagelet" />
  <include package="z3c.json" />
  <include package="z3c.jsonrpc" />
  <include package="z3c.jsontree" />


  <!-- zam configuration -->
  <include package="zam.api" />
  <include package="zam.skin" />
  <include package="zamplugin.navigation" />


  <!-- from zope.app.i18n move this to another package -->
  <!-- Setup language negotiation -->
  <utility
      provides="zope.i18n.interfaces.INegotiator"
      component="zope.i18n.negotiator.negotiator"
      />

  <!-- Setup charset negotiation -->
  <adapter
      factory="zope.publisher.http.HTTPCharsets"
      for="zope.publisher.interfaces.http.IHTTPRequest"
      provides="zope.i18n.interfaces.IUserPreferredCharsets"
      />

  <!-- Setup charset negotiation -->
  <adapter
      factory="zope.app.publisher.browser.ModifiableBrowserLanguages"
      for="zope.publisher.interfaces.http.IHTTPRequest"
      provides="zope.i18n.interfaces.IModifiableUserPreferredLanguages"
      />

  <class class="zope.publisher.http.HTTPRequest">
    <implements
        interface="zope.annotation.interfaces.IAttributeAnnotatable"
        />
  </class>


  <!-- load other zcml files -->
  <include file="securitypolicy.zcml" />
  <include file="principals.zcml" />

  <browser:defaultView name="index.html" />
  <browser:defaultSkin name="ZAM" />

  </configure>

principals.zcml = 
  <unauthenticatedPrincipal
      id="lovelybooks.anybody"
      title="Unauthenticated User"
      />

  <unauthenticatedGroup
      id="zope.Anybody"
      title="Unauthenticated Users"
      />

  <authenticatedGroup
      id="zope.Authenticated"
      title="Authenticated Users"
      />

  <everybodyGroup
      id="zope.Everybody"
      title="All Users"
      />

  <principal
      id="zope.manager"
      title="Manager"
      login="Manager"
      password="password"
      />

  <grant
      role="zope.Manager"
      principal="zope.manager"
      />

securitypolicy.zcml =
  <include package="zope.app.securitypolicy" />

  <securityPolicy
      component="zope.securitypolicy.zopepolicy.ZopeSecurityPolicy" />

  <role id="zope.Anonymous" title="Everybody"
                 description="All users have this role implicitly" />
  <role id="zope.Manager" title="Site Manager" />
  <role id="zope.Member" title="Site Member" />

  <!-- Replace the following directive if you don't want public access -->
  <grant
      permission="zope.View"
      role="zope.Anonymous"
      />
  <grant
      permission="zope.app.dublincore.view"
      role="zope.Anonymous"
      />

  <grantAll role="zope.Manager" />


[var]
recipe = zc.recipe.filestorage
