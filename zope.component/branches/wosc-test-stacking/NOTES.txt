HACKING:

- you need the wosc-test-stacking branch of zope.interface, too
- after buildout, delete _zope_interface_coptimizations.so
  (until we get to the point about C-code on the todo list)


TODO:

* zope.component

major:

- persisting/pickling stackables

- Tests for zope.component-Stacking: can we run the existing tests on a push
  and then pop "level"? (Maybe use another existing application as a
  cross-check, too).

- zope.interface uses C-code for some parts. Is it a performance problem that
  'stackable' is Python-code? (This should only apply to tests, since we're
  going to want to create a way to bypass the stackable stuff)

minor:

- Name StackableBase methods with a prefix so they don't conflict with
  delegated methods (e.g. pop).

- rewrite persistence test to use DemoStorage instead of FileStorage


* Stackable:
- Needs a better name
- Create separate egg?

- stackable.reset() needs to take into account "dying" stackables

- have a name or "stack context", so you can say push('zope.component')
- do we leak memory regarding unregistering of stackables?


* later
- Do we have to make _v_subregistries stackable, i.e. do we want/need to
  support changing __bases__ and restoring that after pop?
