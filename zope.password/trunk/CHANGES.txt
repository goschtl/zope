=======
CHANGES
=======

3.7.0 (unreleased)
------------------

- Add a new IMatchingPasswordManager interface with a 'match' method, which
  returns True if a given password hash was encdoded with the scheme
  implemented by the specific manager. All managers in this package implement
  this interface.

- Use {SHA} as the prefix for SHA1-encoded passwords to be compatible with
  RFC 2307, but support matching against {SHA1} for backwards compatibility.

- Add a crypt password manager to fully support all methods named in RFC 2307.
  It is contained in the 'legacy' module however, to flag crypt's status.

- Add a MySQL PASSWORD() (versions before 4.1) password manager, as also found
  in Zope2's AccessControl.AuthEncoding module.

3.6.1 (2010-05-27)
------------------

- The SSHAPasswordManager.checkPassword() would not handle unicode input
  (even if the string would only contain ascii characters). Now, the
  encoded_password input will be encoded to ascii, which is deemed safe as it
  should not contain non-ascii characters anyway.

3.6.0 (2010-05-07)
------------------

- Removed zope.testing dependency for tests.

- Updated some copyright headers to comply to repository policy.

- Added zpasswd script formerly hold in zope.app.server. Contrary to
  former zpasswd script, which used "Plain Text" as default password
  manager, now SSHA is used as default.

3.5.1 (2009-03-14)
------------------

- Make security protection directives in `configure.zcml` execute only
  if ``zope.security`` is installed. This will allow reuse of the
  `configure.zcml` file in environments without ``zope.security``,
  for example with ``repoze.zcml``.

- Add "Password Manager Names" vocabulary for use with ``zope.schema``
  and ``zope.component``, like it was in ``zope.app.authentication``.
  It's an optional feature so it doesn't add hard dependency. We use
  "vocabulary" extra to list dependencies needed for vocabulary functionality.

3.5.0 (2009-03-06)
------------------

First release. This package was splitted off from ``zope.app.authentication``
to separate password manager functionality that is greatly re-usable without
any bit of ``zope.app.authentication`` and to reduce its dependencies.
