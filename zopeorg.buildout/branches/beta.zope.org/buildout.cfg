# buildout.cfg file for Plone 4 development work
# - for production installations please use http://plone.org/download
# Each part has more information about its recipe on PyPi
# http://pypi.python.org/pypi 
# ... just reach by the recipe name
[buildout]
parts =  
    instance
    zopepy
    i18ndude
    zopeskel
    test
#    omelette

extends = 
    http://dist.plone.org/release/4.0.5/versions.cfg

sources = sources
	
# Add additional egg download sources here. dist.plone.org contains archives
# of Plone packages.
find-links =
    http://dist.plone.org/release/4.0.5
    http://dist.plone.org/thirdparty

extensions = 
    mr.developer
    buildout.dumppickedversions

eggs =
	Plone
    PILwoTK
    Products.PloneHotfix20110720
    plonetheme.zopeorg 
    collective.teaser 
    Products.Collage 
    collective.collage.portlets
    collective.setuphandlertools 

auto-checkout =     
    plonetheme.zopeorg 
    collective.teaser 
    Products.Collage 
    collective.collage.portlets
    collective.setuphandlertools 

# Create bin/instance command to manage Zope start up and shutdown
[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 11080
debug-mode = off
verbose-security = on
blob-storage = var/blobstorage

eggs = ${buildout:eggs}

# Some pre-Plone 3.3 packages may need you to register the package name here in 
# order their configure.zcml to be run (http://plone.org/products/plone/roadmap/247)
# - this is never required for packages in the Products namespace (Products.*)
zcml =
    plonetheme.zopeorg 
    collective.teaser 
    Products.Collage 
    collective.collage.portlets


# zopepy commands allows you to execute Python scripts using a PYTHONPATH 
# including all the configured eggs
[zopepy]
recipe = zc.recipe.egg
eggs = ${buildout:eggs}
interpreter = zopepy
scripts = zopepy

# create bin/i18ndude command
[i18ndude]
unzip = true
recipe = zc.recipe.egg
eggs = i18ndude

# create bin/test command
[test]
recipe = zc.recipe.testrunner
defaults = ['--auto-color', '--auto-progress']
eggs =
    ${buildout:eggs}

# create ZopeSkel command
[zopeskel]
unzip = true
recipe = zc.recipe.egg
eggs =
    ZopeSkel
    ${buildout:eggs}

# symlinks all Python source code to parts/omelette folder when buildout is run
# windows users will need to install additional software for this part to build 
# correctly.  See http://pypi.python.org/pypi/collective.recipe.omelette for
# relevant details.
# [omelette]
# recipe = collective.recipe.omelette
# eggs = ${buildout:eggs}

# Put your mr.developer managed source code repositories here, see
# http://pypi.python.org/pypi/mr.developer for details on format for this part

[sources]
plonetheme.zopeorg = git git://github.com/d2m/plonetheme.zopeorg.git
collective.teaser = git git://github.com/collective/collective.teaser.git
Products.Collage = svn https://svn.plone.org/svn/collective/Products.Collage/trunk
collective.collage.portlets = svn https://svn.plone.org/svn/collective/Products.Collage/addons/collective.collage.portlets/trunk
collective.setuphandlertools = git git://github.com/collective/collective.setuphandlertools.git

# Version pindowns for new style products go here - this section extends one provided in http://dist.plone.org/release/
[versions]




