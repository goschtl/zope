import os.path
import subprocess
from twisted.python import log

from buildbot import locks
from buildbot.changes.svnpoller import SVNPoller, split_file_branches
from buildbot.process import step, factory
from buildbot.process.base import Build
from buildbot.status import html
import html2
from buildbot.scheduler import Scheduler, Nightly
s = factory.s

c = BuildmasterConfig = {}

c['bots'] = [('local', 'local')]
c['slavePortnum'] = 8989

c['sources'] = []

def split_file(path):
    pieces = path.split("/")
    if len(pieces) < 2:
        return None
    project, branch = pieces[0], pieces[1]
    if branch != "trunk":
        return None
    return ("%s/%s" % (project, branch), "/".join(pieces[2:]))

svn_url='svn://svn.zope.org/repos/main/'
c['sources'].append(SVNPoller(svn_url, split_file=split_file, pollinterval=30))

c['schedulers'] = [] 
c['builders'] = []

def make_steps(project):
    return  [s(step.SVN,
               baseURL=svn_url,
               mode='clobber'),
             s(step.Compile,
               name='bootstrap',
               command='buildout bootstrap .',
               description=['bootstrapping'],
               descriptionDone=['bootstrap']),
             s(step.Compile,
               name="buildout",
               command='bin/buildout',
               description=['building'],
               descriptionDone=['build']),
             s(step.Compile,
               name="test",
               command='bin/test --exit-with-status',
               description=['testing'],
               descriptionDone=['tests']),
            ]

slow_lock = locks.SlaveLock("cpu", maxCount=10)

projects = open("projects", "rb").readlines()
projects = [x.strip() for x in projects]
for project in projects:
    build_factory = factory.BuildFactory(make_steps(project))
    build_factory.treeStableTimer = 300
    c['builders'].append({
        'name': project,
        'slavename': 'local',
        'builddir': project,
        'factory': build_factory,
        'locks': [slow_lock],
    })
    del build_factory
    c['schedulers'].append(Scheduler(
        project, "%s/trunk" % project, 30, [project]))
    c['schedulers'].append(Nightly(
        "%s nightly" % project, [project], hour=range(0,24,3),
        branch="%s/trunk" % project))

c['status'] = []
c['status'].append(html2.CompactOverview(http_port=3333))
c['status'].append(html.Waterfall(http_port=3334))

c['projectName'] = "buildbot for zope.org projects"
c['projectURL'] = "http://dev.zope.org/"
c['buildbotURL'] = "http://uter.gocept.com:3333/"
