<configure xmlns="http://namespaces.zope.org/zope"
           xmlns:wsgi="http://namespaces.zope.org/wsgi">

<!-- A wsgi:pipeline directive specifies the names of
     applications to use in a pipeline.  Its implementation
     registers a bound PipelineApplicationList.adapt() method as an
     unnamed adapter from the request type to IPipelineApplicationList. -->

<wsgi:pipeline for=".interfaces.INoRequest" names="
    virtual_host
    retry
    create_request
    switch_pipeline
    " />

<wsgi:pipeline for="zope.publisher.interfaces.IRequest" names="
    log
    open_root
    scrub_transaction
    set_site
    event
    handle_error
    control_transaction
    process_inputs
    authenticate
    traverse
    fix_relative_links
    call
    " />

<!-- A wsgi:application directive registers an application for use
     in a pipeline. If the application is the last element of the
     pipeline, the factory will be passed no positional parameters.
     Otherwise, the application will be passed the next application in
     the pipeline as the only positional parameter.

     The implementation of this directive registers a new
     WSGIApplicationFactory as an adapter from a marker request to
     IWSGIApplicationFactory. If neither the directive nor the factory
     says what kind of request is required, assume IRequest. -->

<wsgi:application
    name="retry"
    factory=".apps.retry.RetryApp"
    for=".interfaces.INoRequest" />

<wsgi:application
    name="create_request"
    factory=".apps.requestsetup.CreateRequest"
    for=".interfaces.INoRequest" />

<wsgi:application
    name="switch_pipeline"
    factory=".apps.switch.SwitchPipeline"
    for=".interfaces.INoRequest" />


<!--wsgi:application
    name="log"
    factory="..." /-->

<wsgi:application
    name="open_root"
    factory=".apps.openroot.RootOpener" />

<wsgi:application
    name="scrub_transaction"
    factory=".apps.txnctl.TransactionScrubber" />

<wsgi:application
    name="event"
    factory=".apps.event.EventNotifier" />

<!--wsgi:application
    name="handle_error"
    factory="..." /-->

<wsgi:application
    name="control_transaction"
    factory=".apps.txnctl.TransactionController" />

<!-- no input processing for non-browser requests -->
<wsgi:application
    name="process_input"
    factory=".apps.passthrough"
    for="zope.publisher.interfaces.IRequest" />

<!-- parse forms for browser requests -->
<wsgi:application
    name="process_input"
    factory=".apps.requestsetup.ParseForm"
    for="zope.publisher.interfaces.browser.IBrowserRequest" />

<!--wsgi:application
    name="authenticate"
    factory=".apps.authenticate.Authenticator" /-->

<!-- Normal traversal for non-browser requests -->
<wsgi:application
    name="traverse"
    factory=".apps.traversal.Traverser" />

<!-- Extra traversal for browser requests -->
<wsgi:application
    name="traverse"
    factory=".apps.traversal.BrowserTraverser"
    for="zope.publisher.interfaces.browser.IBrowserRequest" />

<!-- Just use mapply for non-HTTP requests -->
<wsgi:application
    name="call"
    factory=".apps.mapply.Caller" />

<!-- For browser requests, treat the HEAD method specially -->
<wsgi:application
    name="call"
    factory=".apps.mapply.HTTPCaller"
    for="zope.publisher.interfaces.browser.IBrowserRequest"
    />

<!-- For non-browser HTTP requests, look up method-specific views -->
<wsgi:application
    name="call"
    factory=".apps.mapply.HTTPRequestMethodCaller"
    for="zope.publisher.interfaces.http.IHTTPRequest"
    />

</configure>



<!--
    # other possible stages:
    # RequestProfiler
    # CodeFreshnessChecker
    # Multiprocessor
    # ComponentConfigurator
    # DetailedTracebackGenerator

    # stages we're using:
    'logger',
    'retry',
    'request_factory',        # also sets locale (?)
    'root_opener',
    'transaction_controller',
    'error_handler',
    'global_authenticator',
    'traverser',
    'transaction_annotator',
    'caller',
-->
