<configuration>

<!-- a wsgi:stage-list directive registers a bound StageList.adapt() method
     as an unnamed adapter from the request type to IStageList. -->

<wsgi:stage-list require=".interfaces.IUndecidedRequest" names="
    retry
    request_factory
    select_pipeline
    " />

<wsgi:stage-list require="zope.publisher.interfaces.IRequest" names="
    logger
    root_opener
    transaction_controller
    notifier
    error_handler
    authenticator
    traverser
    transaction_annotator
    caller
    " />

<!-- a wsgi:pipeline directive registers a bound Pipeline.adapt() method as
     an adapter from the request type to IWSGIApplication with name
     "pipeline". -->

<wsgi:pipeline require=".interfaces.IUndecidedRequest" />
<wsgi:pipeline require="zope.publisher.interfaces.IRequest" />
<wsgi:pipeline require="zope.publisher.interfaces.http.IHTTPRequest" />
<wsgi:pipeline require="zope.publisher.interfaces.browser.IBrowserRequest" />

<!-- a wsgi:middleware directive is just like an adapter directive,
     except that the adapter is always registered as requiring
     two parameters, 'app' and 'request'; the factory may be wrapped
     to make that happen.  If neither the directive nor the factory
     says what kind of request is required, assume IRequest. -->

<wsgi:middleware
    factory=".retry.Retry"
    name="retry" />

<!-- a wsgi:app directive is just like an adapter directive,
     except that the adapter is always registered as requiring
     one parameter, 'request'; the factory may be wrapped
     to make that happen.  If neither the directive nor the factory
     says what kind of request is required, assume IRequest. -->

<wsgi:app
    factory=".caller.Caller"
    name="caller" />


<adapter
    factory=".retry.Retry"
    name="retry" />

<adapter
    factory="..."
    name="request_factory" />

<adapter
    factory="..."
    name="select_pipeline" />

<adapter
    factory="..."
    name="logger" />

<adapter
    factory=".rootopen.RootOpener"
    name="root_opener" />

<adapter
    factory=".txnctl.TransactionController"
    name="transaction_controller" />

<adapter
    factory=".event.EventNotifier"
    name="notifier" />

<adapter
    factory="..."
    name="error_handler" />

<adapter
    factory=".authenticator.Authenticator"
    name="authenticator" />

<adapter
    factory="..."
    name="traverser" />

<adapter
    factory=".txnctl.TransactionAnnotator"
    name="transaction_annotator" />


</configuration>



<!--
    # other possible stages:
    # RequestProfiler
    # CodeFreshnessChecker
    # Multiprocessor
    # ComponentConfigurator
    # DetailedTracebackGenerator

    # stages we're using:
    'logger',
    'retry',
    'request_factory',        # also sets locale (?)
    'root_opener',
    'transaction_controller',
    'error_handler',
    'global_authenticator',
    'traverser',
    'transaction_annotator',
    'caller',
-->
