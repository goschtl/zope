<configure xmlns="http://namespaces.zope.org/zope"
           xmlns:wsgi="http://namespaces.zope.org/wsgi">

<!-- a wsgi:pipeline directive specifies the names of
     applications to use in a pipeline.  Its implementation
     registers a bound PipelineApplicationList.adapt() method as an
     unnamed adapter from the request type to IPipelineApplicationList. -->

<wsgi:pipeline for=".interfaces.IUndecidedRequest" names="
    retry
    create_request
    switch_pipeline
    " />

<wsgi:pipeline for="zope.publisher.interfaces.IRequest" names="
    log
    open_root
    control_transaction
    event
    handle_error
    process_form
    authenticate
    traverse
    annotate_transaction
    call
    " />

<!-- a wsgi:middleware directive registers an application for use
     as middleware in a pipeline.  It is like an adapter directive,
     except that the adapter is registered as requiring
     two parameters, 'app' and 'request', while only the 'app' parameter is
     provided to the middleware factory; the factory is wrapped
     to make that happen.  If neither the directive nor the factory
     says what kind of request is required, assume IRequest. -->

<wsgi:middleware
    factory=".apps.retry.Retry"
    name="retry"
    for=".interfaces.INoRequest" />

<wsgi:middleware
    factory="..."
    name="request_setup"
    for=".interfaces.INoRequest" />

<!-- a wsgi:application directive registers an application for use
     as the final application in a pipeline.  It is like an adapter
     directive, except that the adapter is registered as requiring
     one parameter, 'request', while no parameters are passed to the
     application factory; the factory is wrapped
     to make that happen.  If neither the directive nor the factory
     says what kind of request is required, assume IRequest. -->

<wsgi:application
    factory=".apps.switch.SwitchPipeline"
    name="switch_pipeline"
    for=".interfaces.INoRequest" />


<wsgi:middleware
    factory="..."
    name="logger" />

<wsgi:middleware
    factory=".apps.rootopen.RootOpener"
    name="root_opener" />

<wsgi:middleware
    factory=".apps.txnctl.TransactionController"
    name="transaction_controller" />

<wsgi:middleware
    factory=".apps.notify.EventNotifier"
    name="notifier" />

<wsgi:middleware
    factory="..."
    name="error_handler" />

<wsgi:middleware
    factory=".apps.authenticator.Authenticator"
    name="authenticator" />

<wsgi:middleware
    factory="..."
    name="traverser" />

<wsgi:middleware
    factory=".apps.txnctl.TransactionAnnotator"
    name="transaction_annotator" />

<wsgi:application
    factory=".apps.caller.Caller"
    name="caller" />

</configure>



<!--
    # other possible stages:
    # RequestProfiler
    # CodeFreshnessChecker
    # Multiprocessor
    # ComponentConfigurator
    # DetailedTracebackGenerator

    # stages we're using:
    'logger',
    'retry',
    'request_factory',        # also sets locale (?)
    'root_opener',
    'transaction_controller',
    'error_handler',
    'global_authenticator',
    'traverser',
    'transaction_annotator',
    'caller',
-->
