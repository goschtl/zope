* zc.buildout has a logging initialization bug (it doesn't tear down
  the logging handler, so subsequent logging calls are multiplied).
  See https://bugs.launchpad.net/zc.buildout/+bug/125729.

* Allow values to be provided thru command line arguments
  See https://bugs.launchpad.net/grok/+bug/125817.

* Maybe rename application.py to app_factory.py or something like
  that? (application.py sort of collides with grok's app.py)

* ftesting.zcml and testing.py

* Need tests!

* README: how to deploy?

* README: link to zc.buildout tutorial

* README: tell people about ~/.buildout/default.cfg

* README: document --svn-repository switch and document which stuff
  should/can be checked in and which stuff never should
  (buildout-created stuff).

* Alter the way the eggs directory is added to buildout.cfg:

  - check if there's a default setting in ~/.buildout/default.cfg

  - if there's a default setting and the user simply takes that (by
    pressing return), buildout.cfg won't get a eggs-directory setting
    (but perhaps a comment instead mentioning that the default setting
    will be used).

  - if there's a default setting but the user chooses to enter a
    different directory, buildout.cfg will have the necessary
    eggs-directory setting.

  - if there's no default setting, zopeproject/grokproject will
    suggest a sensible eggs directory (e.g. ~/buildout-eggs) and
    buildout.cfg will have the necessary eggs-directory setting.

* Bring back bin/zopectl (fg, start/stop/status, debug)

* Use zope.app.wsgi.getApplication() ?

* There's a bug when guessing the default eggs-directory: if
  ~/.buildout/default.cfg does NOT contain an eggs-directory option,
  zopeproject fails with a ConfigParser.NoOptionError.

* Instead of a --svn-repository, make it a question (with the default
  of no repository == no checkin).

  And if you don't check in on project creation, a tool should allow
  you to do it later (and it should ignore the right files)

* Not only allow the creation of new applications but also the
  deployment of existing applications.  Also consider the library use
  case.  Suggested command line usage:

    $ zopeproject app NewApplication
    $ zopeproject deploy ExistingApplication
    $ zopeproject library new.library
