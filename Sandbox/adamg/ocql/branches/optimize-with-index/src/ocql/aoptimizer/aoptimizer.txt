
	>>> from zope.interface.verify import verifyObject

	>>> from ocql.interfaces import IAlgebraOptimizer
    >>> from ocql.aoptimizer.aoptimizer import AlgebraOptimizer
    >>> from ocql.interfaces import IOptimizedAlgebraObject
    >>> from ocql.interfaces import IDB

#Currently the optimizer is doing NOTHING, it just returns what it gets.
#(And adds the interface IOptimizedAlgebraObject)

    >>> class Dummy(object):
    ...     def __init__(self, tree):
    ...          self.tree = tree

    >>> in_=Dummy('foo-bar')
    >>> in_.tree
    'foo-bar'

    >>> obj = AlgebraOptimizer(in_)
	>>> verifyObject(IAlgebraOptimizer, obj)
	True

	>>> out = obj(None)

    >>> print out
    <Dummy object at ...>
    >>> out.tree
    'foo-bar'

    >>> IOptimizedAlgebraObject.providedBy(out)
    True