BlueBream
=========

The template supports any number namespace levels, depending on the provided
project name. 

First try with a single flat package:
-------------------------------------

>>> import os
>>> def print_dir(d):
...     for a,b,c in os.walk(d):
...         print a
...         for f in c:
...             print os.path.join(a,f)

>>> from paste.script import command
>>> project = 'sample'
>>> commands = command.get_commands()
>>> cmd = commands['create'].load()
>>> runner = cmd('create')
>>> option_args = []
>>> extra_args = [
...            "interpreter=testpy",
...            "version=0.1",
...            "description=test_description",
...            "long_description=test_long_description",
...            "keywords=test_keyword",
...            "author=test_author",
...            "author_email=test_author_email",
...            "url=http://example.com",
...            "license_name=Test Public License",
...            "zip_safe=False",
...            ]
>>> exit_code = runner.run(option_args + ['-t', 'bluebream', project] + extra_args)
Selected and implied templates:
  bluebream#bluebream  A BlueBream project, base template
<BLANKLINE>
Variables:
  author:            test_author
  author_email:      test_author_email
  description:       test_description
  egg:               sample
  interpreter:       testpy
  keywords:          test_keyword
  license_name:      Test Public License
  long_description:  test_long_description
  package:           sample
  project:           sample
  url:               http://example.com
  version:           0.1
  zip_safe:          False
Creating template bluebream
Creating directory ./sample

>>> print_dir('sample')
sample
sample/debug.ini
sample/setup.py
sample/bootstrap.py
sample/versions.cfg
sample/deploy.ini
sample/buildout.cfg
sample/etc
sample/etc/site.zcml
sample/templates
sample/templates/zope_conf.in
sample/var
sample/var/filestorage
sample/var/filestorage/README.txt
sample/var/log
sample/var/log/README.txt
sample/src
sample/src/sample.egg-info
sample/src/sample.egg-info/entry_points.txt
sample/src/sample.egg-info/requires.txt
sample/src/sample.egg-info/top_level.txt
sample/src/sample.egg-info/zip-safe
sample/src/sample.egg-info/SOURCES.txt
sample/src/sample.egg-info/dependency_links.txt
sample/src/sample.egg-info/namespace_packages.txt
sample/src/sample.egg-info/PKG-INFO
sample/src/sample
sample/src/sample/__init__.py
sample/src/sample/configure.zcml
sample/src/sample/securitypolicy.zcml
sample/src/sample/startup.py
sample/src/sample/debug.py
sample/src/sample/tests
sample/src/sample/tests/__init__.py
sample/src/sample/tests/tests.py
sample/src/sample/tests/ftesting.zcml
sample/src/sample/welcome
sample/src/sample/welcome/__init__.py
sample/src/sample/welcome/ftests.txt
sample/src/sample/welcome/interfaces.py
sample/src/sample/welcome/configure.zcml
sample/src/sample/welcome/views.py
sample/src/sample/welcome/app.py
sample/src/sample/welcome/index.pt
sample/src/sample/welcome/static
sample/src/sample/welcome/static/logo.png
sample/src/sample/welcome/static/style.css




We can also create a project with a namespace:
----------------------------------------------

>>> from paste.script import command
>>> project = 'sample.main'
>>> commands = command.get_commands()
>>> cmd = commands['create'].load()
>>> runner = cmd('create')
>>> option_args = []
>>> extra_args = [
...            "interpreter=testpy",
...            "version=0.1",
...            "description=test_description",
...            "long_description=test_long_description",
...            "keywords=test_keyword",
...            "author=test_author",
...            "author_email=test_author_email",
...            "url=http://example.com",
...            "license_name=Test Public License",
...            "zip_safe=False",
...            ]
>>> exit_code = runner.run(option_args + ['-t', 'bluebream', project] + extra_args)
Selected and implied templates:
  bluebream#bluebream  A BlueBream project, base template
<BLANKLINE>
Variables:
  author:            test_author
  author_email:      test_author_email
  description:       test_description
  egg:               sample.main
  interpreter:       testpy
  keywords:          test_keyword
  license_name:      Test Public License
  long_description:  test_long_description
  package:           samplemain
  project:           sample.main
  url:               http://example.com
  version:           0.1
  zip_safe:          False
Creating template bluebream
Creating directory ./sample.main

>>> print_dir('sample.main')
sample.main
sample.main/debug.ini
sample.main/setup.py
sample.main/bootstrap.py
sample.main/versions.cfg
sample.main/deploy.ini
sample.main/buildout.cfg
sample.main/etc
sample.main/etc/site.zcml
sample.main/templates
sample.main/templates/zope_conf.in
sample.main/var
sample.main/var/filestorage
sample.main/var/filestorage/README.txt
sample.main/var/log
sample.main/var/log/README.txt
sample.main/src
sample.main/src/sample.main.egg-info
sample.main/src/sample.main.egg-info/entry_points.txt
sample.main/src/sample.main.egg-info/requires.txt
sample.main/src/sample.main.egg-info/top_level.txt
sample.main/src/sample.main.egg-info/zip-safe
sample.main/src/sample.main.egg-info/SOURCES.txt
sample.main/src/sample.main.egg-info/dependency_links.txt
sample.main/src/sample.main.egg-info/namespace_packages.txt
sample.main/src/sample.main.egg-info/PKG-INFO
sample.main/src/sample
sample.main/src/sample/__init__.py
sample.main/src/sample/main
sample.main/src/sample/main/__init__.py
sample.main/src/sample/main/configure.zcml
sample.main/src/sample/main/securitypolicy.zcml
sample.main/src/sample/main/startup.py
sample.main/src/sample/main/debug.py
sample.main/src/sample/main/tests
sample.main/src/sample/main/tests/__init__.py
sample.main/src/sample/main/tests/tests.py
sample.main/src/sample/main/tests/ftesting.zcml
sample.main/src/sample/main/welcome
sample.main/src/sample/main/welcome/__init__.py
sample.main/src/sample/main/welcome/ftests.txt
sample.main/src/sample/main/welcome/interfaces.py
sample.main/src/sample/main/welcome/configure.zcml
sample.main/src/sample/main/welcome/views.py
sample.main/src/sample/main/welcome/app.py
sample.main/src/sample/main/welcome/index.pt
sample.main/src/sample/main/welcome/static
sample.main/src/sample/main/welcome/static/logo.png
sample.main/src/sample/main/welcome/static/style.css




Another project with two levels of namespace:
---------------------------------------------

>>> from paste.script import command
>>> project = 'sample.app.main'
>>> commands = command.get_commands()
>>> cmd = commands['create'].load()
>>> runner = cmd('create')
>>> option_args = []
>>> extra_args = [
...            "interpreter=testpy",
...            "version=0.1",
...            "description=test_description",
...            "long_description=test_long_description",
...            "keywords=test_keyword",
...            "author=test_author",
...            "author_email=test_author_email",
...            "url=http://example.com",
...            "license_name=Test Public License",
...            "zip_safe=False",
...            ]
>>> exit_code = runner.run(option_args + ['-t', 'bluebream', project] + extra_args)
Selected and implied templates:
  bluebream#bluebream  A BlueBream project, base template
<BLANKLINE>
Variables:
  author:            test_author
  author_email:      test_author_email
  description:       test_description
  egg:               sample.app.main
  interpreter:       testpy
  keywords:          test_keyword
  license_name:      Test Public License
  long_description:  test_long_description
  package:           sampleappmain
  project:           sample.app.main
  url:               http://example.com
  version:           0.1
  zip_safe:          False
Creating template bluebream
Creating directory ./sample.app.main

>>> print_dir('sample.app.main')
sample.app.main
sample.app.main/debug.ini
sample.app.main/setup.py
sample.app.main/bootstrap.py
sample.app.main/versions.cfg
sample.app.main/deploy.ini
sample.app.main/buildout.cfg
sample.app.main/etc
sample.app.main/etc/site.zcml
sample.app.main/templates
sample.app.main/templates/zope_conf.in
sample.app.main/var
sample.app.main/var/filestorage
sample.app.main/var/filestorage/README.txt
sample.app.main/var/log
sample.app.main/var/log/README.txt
sample.app.main/src
sample.app.main/src/sample
sample.app.main/src/sample/__init__.py
sample.app.main/src/sample/app
sample.app.main/src/sample/app/__init__.py
sample.app.main/src/sample/app/main
sample.app.main/src/sample/app/main/__init__.py
sample.app.main/src/sample/app/main/configure.zcml
sample.app.main/src/sample/app/main/securitypolicy.zcml
sample.app.main/src/sample/app/main/startup.py
sample.app.main/src/sample/app/main/debug.py
sample.app.main/src/sample/app/main/tests
sample.app.main/src/sample/app/main/tests/__init__.py
sample.app.main/src/sample/app/main/tests/tests.py
sample.app.main/src/sample/app/main/tests/ftesting.zcml
sample.app.main/src/sample/app/main/welcome
sample.app.main/src/sample/app/main/welcome/__init__.py
sample.app.main/src/sample/app/main/welcome/ftests.txt
sample.app.main/src/sample/app/main/welcome/interfaces.py
sample.app.main/src/sample/app/main/welcome/configure.zcml
sample.app.main/src/sample/app/main/welcome/views.py
sample.app.main/src/sample/app/main/welcome/app.py
sample.app.main/src/sample/app/main/welcome/index.pt
sample.app.main/src/sample/app/main/welcome/static
sample.app.main/src/sample/app/main/welcome/static/logo.png
sample.app.main/src/sample/app/main/welcome/static/style.css
sample.app.main/src/sample.app.main.egg-info
sample.app.main/src/sample.app.main.egg-info/entry_points.txt
sample.app.main/src/sample.app.main.egg-info/requires.txt
sample.app.main/src/sample.app.main.egg-info/top_level.txt
sample.app.main/src/sample.app.main.egg-info/zip-safe
sample.app.main/src/sample.app.main.egg-info/SOURCES.txt
sample.app.main/src/sample.app.main.egg-info/dependency_links.txt
sample.app.main/src/sample.app.main.egg-info/namespace_packages.txt
sample.app.main/src/sample.app.main.egg-info/PKG-INFO

