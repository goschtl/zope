=======================================
Copying Search Results to the Clipboard
=======================================

.. NOTE: This is all tutorial, not a test (for now).

The `zc.site.search` module includes tools to support copying search
results to the clipboard, which can be used for both portlet and
non-portlet uses of searching.  The support provided requires that
search results are represented by sets of int ids and are presented
using a table formatter based on `zc.table`.

There are two pieces needed to make use of this support.

A column of checkboxes is used to allow the user to select specific
search results; this can be included in the column set for the table
like any other column (though it is commonly placed first).  This can
be included very simply::

    >>> import zc.searchportlet.portlet
    >>> import zc.searchportlet.table
    >>> import zc.searchportlet.view
    >>> import zc.site.search

    >>> class MySearchPortlet(zc.searchportlet.portlet.AbstractPortlet):
    ...     columns = (
    ...         zc.site.search.SelectionColumn(),
    ...         zc.searchportlet.table.TitleColumn(u'Title'),
    ...         )

The form used to display and work with search results needs to have an
action that checks the selection and performs the copy to the
clipboard.  The constructor for the action needs the column provided
in the column set and a callable that can return the items in the
result set as keyword arguments::

    >>> class MySearchPortletNormalView(
    ...           zc.searchportlet.view.AbstractNormalView):
    ...
    ...     # Make a copy of the base actions so we can modify it:
    ...     actions = zc.searchportlet.view.AbstractNormalView.actions[:]
    ...
    ...     actions.append(
    ...         zc.site.search.SelectionToClipboard(
    ...             column=MySearchPortlet.columns[0],
    ...             items=lambda form: form.items))

And that's all you need to support copying of search results.
