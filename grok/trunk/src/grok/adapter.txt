Adapter
=======

  >>> import grok
  >>> grok.grok('grok.tests.adapter')

  >>> from grok.tests.adapter import IHome, Home, Cave
  >>> cave = Cave()
  >>> home = IHome(cave)

  >>> IHome.providedBy(home)
  True
  >>> isinstance(home, Home)
  True

If no model can be found in the module, we get an error:

  >>> grok.grok('grok.tests.nomodel')
  Traceback (most recent call last):
    ...
  GrokError: Adapter without context

Clean up component registry:

  >>> from zope.testing.cleanup import cleanUp
  >>> cleanUp()

Imported model and adapter won't be grokked:

  >>> grok.grok('grok.tests.importedmodel')
  >>> home = IHome(cave)
  Traceback (most recent call last):
    ...
  TypeError: ('Could not adapt', <grok.tests.adapter.Cave object at ...>, <InterfaceClass grok.tests.adapter.IHome>)

Clean up:

  >>> cleanUp()

Grok error because import model doesn't count as context:

  >>> grok.grok('grok.tests.importedmodel2')
  Traceback (most recent call last):
    ...
  GrokError: Adapter without context
