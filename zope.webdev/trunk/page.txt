========
The Page
========

First we create a site:

  >>> from zope.app.testing import setup
  >>> from zope.app.folder import rootFolder
  >>> site = rootFolder()
  >>> setup.createSiteManager(site, setsite=True)
  <zope.app.component.site.LocalSiteManager object at ...>

  >>> site['image.gif'] = object()
  >>> site['file.txt'] = object()

  >>> from zope.webdev.page import Page,registerPage,reregisterPage
  >>> from zope.webdev.interfaces import IPage
  >>> from zope.app.container.interfaces import IReadContainer
  >>> names_html = Page('names.html', for_=IPage)
  >>> site.getSiteManager()['default']['names.html'] = names_html
  >>> registerPage(names_html)
  >>> names_html.for_ = IReadContainer
  >>> reregisterPage(names_html)


defaults are: for=Interface, layers=(IDefaultLayer,),
              permission=CheckerPublic, template=zptpage.ZPTPage(),
              module=ModuleManager(), className=None)

is automatically registered.

  >>> names_html.templateSource = u'''
  ... <html>
  ...   <body>
  ...     <h1>Folder contents</h1>
  ...     <ul>
  ...       <li tal:repeat="name view/names"
  ...           tal:content="name" />
  ...     </ul>
  ...   </body>
  ... </html>
  ... '''

  >>> names_html.moduleSource = '''
  ... class FolderContents(object):
  ...     @property
  ...     def names(self):
  ...         return sorted(self.context.keys())
  ... '''
  >>> names_html.className = 'FolderContents'

Now the page is setup and it should be available for any folder:

  >>> import zope.component
  >>> from zope.publisher.browser import TestRequest
  >>> request = TestRequest()

  >>> page = zope.component.getMultiAdapter(
  ...     (site, request), name='names.html')
  

Now render the page:

  >>> print page()
  <html>
    <body>
      <h1>Folder contents</h1>
      <ul>
        <li>file.txt</li>
        <li>image.gif</li>
      </ul>
    </body>
  </html>

  >>> del(page)
  >>> names_html.moduleSource = '''
  ... class FolderContents(object):
  ...     @property
  ...     def names(self):
  ...         return sorted(self.context.keys(),reverse=True)
  ... '''
  >>> request = TestRequest()
  >>> page = zope.component.getMultiAdapter(
  ...     (site, request), name='names.html')


  >>> print page()
  <html>
    <body>
      <h1>Folder contents</h1>
      <ul>
        <li>image.gif</li>
        <li>file.txt</li>
      </ul>
    </body>
  </html>

  >>> names_html.templateSource=u"""abc"""
  >>> print page()
  abc

  Test event callback to ensure view is reloaded.
  
  >>> reregisterPage(names_html)

  Make sure the event is being fired properly and the view no longer looks up
  properly after we change for_.

  >>> from zope.app.event.objectevent import ObjectModifiedEvent
  >>> from zope.event import notify
  >>> notify(ObjectModifiedEvent(names_html))
  >>> names_html.for_ = IReadContainer
  >>> reregisterPage(names_html)
  >>> page = zope.component.getMultiAdapter(
  ...     (site, request), name='names.html')
  

