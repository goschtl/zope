[buildout]
parts =
    zope2
    instance
    zopepy
    test
    coverage-test
    coverage-report
    omelette

# Add additional egg download sources here. dist.plone.org contains archives
# of Plone packages.
find-links =
    http://download.zope.org/ppix/
    http://download.zope.org/distribution/
    http://effbot.org/downloads

eggs = ipdb

# Reference any eggs you are developing here, one per line
# e.g.: develop = src/my.package
develop = .
          devel/plone.clids

newest = false

[zope2]
recipe = plone.recipe.zope2install
url = http://www.zope.org/Products/Zope/2.10.5/Zope-2.10.5-final.tgz

[instance]
recipe = plone.recipe.zope2instance
zope2-location = ${zope2:location}
user = admin:admin
http-address = 8080
debug-mode = on
verbose-security = on

# If you want Zope to know about any additional eggs, list them here.
# This should include any development eggs you listed in develop-eggs above,
# e.g. eggs = ${buildout:eggs} ${plone:eggs} my.package
eggs =
    ${buildout:eggs}
    five.clids

# If you want to register ZCML slugs for any packages, list them here.
# e.g. zcml = my.package my.other.package
zcml = five.clids

products =

[zopepy]
recipe = zc.recipe.egg
eggs = ${instance:eggs}
interpreter = zopepy
extra-paths = ${zope2:location}/lib/python
scripts = zopepy

[test]
recipe = collective.recipe.z2testrunner
zope2part = instance
packages = 
    five.clids
defaults = -c
exit-with-status = true

[coverage-test]
recipe = collective.recipe.z2testrunner
zope2part = instance
packages =
    five.clids
defaults = --coverage=./coverage

[coverage-report]
recipe = zc.recipe.egg
eggs = z3c.coverage
scripts = coverage=coverage-report
arguments = ('coverage', 'coverage/report')

[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}
products = ${instance:products}
packages = ${zope2:location}/lib/python ./
