<html>
<head>
<meta http-equiv="Content-Language" content="en-us">

<title>Python Community Cross-Pollination &mdash; Zope v0.1 documentation</title>
<link rel="stylesheet" type="text/css" href="stylesheets.css">
</head>
<body>
<div align="center">
  <center>
  <div class="holder">
<div class="topbar"></div>
<div class="menu-container">
<div class="logo-holder">
  <img src="images/logo-zope.gif" alt="Logo" width="225" height="82" /></div>
<div id="menu">
		<ul>
			<li><a href="index.htm">What is Zope?</a></li>
			<li><a href="whoiszope.htm">Who is Zope?</a></li>
			<li class="current-page-item"><a href="whyzope.htm">Why Zope?</a></li>
		</ul>
<div class="brclear"></div>
</div>
<div class="brclear"></div>
</div>

<div>
<div class="panel-five">
  <div class="rgtpanel-he1">Why Zope?</div>
  <p class="text">Zope applications, libraries, and frameworks are suited for 
  different purposes and environments; each has a set of strengths and 
  weaknesses.</p>
  <p class="textbold-one">Zope is Mature</p>
  <p class="text">Zope’s robust technologies are born of 10 years of hard-won real world 
experience in building production web applications for every level of 
organization, ranging from small nonprofits to large enterprise systems and high 
traffic public web applications.</p>
<p class="text">Zope’s groundbreaking innovations over the years led the way in demonstrating 
the practicality of powerful software patterns, including object databases, 
object publishing, and component architecture.</p>
<p class="text">All the applications built using the Zope Framework benefit from this 
maturity, For example, the older projects, the Zope 2 app server as well as 
Plone, both increasingly make use of the newest Zope library versions while 
still maintaining the feature set that makes it useful in heavy production 
settings.</p>
<p class="text">Meanwhile, younger Zope web frameworks such as Grok and Repoze.BFG, leverage 
the mature Zope Framework libraries to bring new ideas to web development.</p>
<p class="textbold-one">Designed for Automated Testing</p>
<p class="text">All the major Zope frameworks and libraries are built around a culture of 
automated testing.</p>
<p class="textbold-one">Scalable Performance</p>
<p class="text">Applications built using the Zope Object Database can benefit from ZEO 
Clustering, which allow multiple applications to share a single object database</p>
<p class="textbold-one">Persistence Options</p>
<p class="text">Zope applications traditionally benefit from the use of a mature 
high-performance transactional object database called ZODB, which increases 
developer productivity by avoiding the complexity of a relational database 
layer.</p>
<p class="text">However, relational databases (RDBMs) are also a popular persistence option 
for Zope applications, and good options exist for using object relational 
mappers such as SQLAlchemy and Storm.</p>
<p class="textbold-one">Zope Component Architecture</p>
<p class="text">One of the lessons learned over the years was the need for a component 
architecture; using object composition instead of object inheritance avoids 
tight coupling between application parts so that components can be swapped 
without causing breakage. The Zope Component Architecture provides and elegant 
solution which helps manage complexity and encourage component reusability.</p>
</div>
</div>
</div>
<div class="brclear"></div>
</div>
<div>&nbsp;</div>
<div class="footer">© Copyright 2009, Zope Developers. Created using <a href="http://sphinx.pocoo.org/">Sphinx</a> 0.6.1</div>
</div>
</center>
</body>
</html>