       ##############################################################################
       #
       # Copyright (c) 2007 Zope Corporation and Contributors.
       # All Rights Reserved.
       #
       # This software is subject to the provisions of the Zope Public License,
       # Version 2.1 (ZPL).  A copy of the ZPL should accompany this distribution.
       # THIS SOFTWARE IS PROVIDED "AS IS" AND ANY AND ALL EXPRESS OR IMPLIED
       # WARRANTIES ARE DISCLAIMED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
       # WARRANTIES OF TITLE, MERCHANTABILITY, AGAINST INFRINGEMENT, AND FITNESS
       # FOR A PARTICULAR PURPOSE.
       #
       ##############################################################################
       """Null resource.
       
       $Id: http.py 72310 2007-02-01 21:39:01Z mkerrin $
    1: """
    1: import zope.component
    1: import zope.interface
    1: from zope.app.http.interfaces import INullResource
    1: from zope.location import location
    1: from zope.traversing.browser import absoluteURL
       
    1: from z3c.rest import rest
       
    2: class NullResource(location.Location):
           """Object representing objects to be created by a `PUT`."""
    1:     zope.interface.implements(INullResource)
       
    1:     def __init__(self, container, name):
    6:         self.__parent__ = self.container = container
    6:         self.__name__ = self.name = name
       
    1:     def __repr__(self):
    1:         return '<%s %r>' %(self.__class__.__name__, self.name)
       
       
    2: class NullPUT(rest.RESTView):
           """Put handler for null resources"""
       
    1:     def PUT(self):
    6:         nullPut = zope.component.queryMultiAdapter(
                   (self.context.container, self.request), name='NullPUT')
    6:         if nullPut is None:
                   # See RFC 2616, section 9.6
    1:             self.request.response.setStatus(501)
    1:             return
       
    5:         newObj = nullPut.NullPUT(self.context)
       
               # See RFC 2616, section 9.6
    4:         self.request.response.setStatus(201)
    4:         self.request.response.setHeader(
                   'Location', absoluteURL(newObj, self.request))
