       ##############################################################################
       #
       # Copyright (c) 2007 Zope Corporation and Contributors.
       # All Rights Reserved.
       #
       # This software is subject to the provisions of the Zope Public License,
       # Version 2.1 (ZPL).  A copy of the ZPL should accompany this distribution.
       # THIS SOFTWARE IS PROVIDED "AS IS" AND ANY AND ALL EXPRESS OR IMPLIED
       # WARRANTIES ARE DISCLAIMED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
       # WARRANTIES OF TITLE, MERCHANTABILITY, AGAINST INFRINGEMENT, AND FITNESS
       # FOR A PARTICULAR PURPOSE.
       #
       ##############################################################################
       """REST testing support.
       
       $Id: http.py 72310 2007-02-01 21:39:01Z mkerrin $
    1: """
    1: import sys
    1: import zope.interface
    1: from z3c.rest import client, rest, interfaces
    1: from zope.app.publication.http import HTTPPublication
    1: from zope.app.testing.functional import HTTPCaller
       
       
    2: class RESTCaller(HTTPCaller):
           """An HTTP caller for REST functional page tests"""
       
    1:     def chooseRequestClass(self, method, path, environment):
               """Always returns HTTPRequests regardless of methods and content"""
   31:         return rest.RESTRequest, HTTPPublication
       
       
    2: class PublisherConnection(object):
       
    1:     def __init__(self, server, port=None):
   31:         self._response = None
   31:         self.server = server
   31:         self.port = port
       
    1:     def request(self, method, path, body, headers):
               # Extract the handle_error option header
   31:         if sys.version_info >= (2,5):
>>>>>>             handleErrorsKey = 'X-Zope-Handle-Errors'
               else:
   31:             handleErrorsKey = 'X-zope-handle-errors'
   31:         handleErrors = headers.get(handleErrorsKey, True)
   31:         if handleErrorsKey in headers:
   27:             del headers[handleErrorsKey]
       
               # Construct the request body and call the publisher
   31:         body = body or ''
   31:         request = ["%s %s HTTP/1.1" % (method, path)]
   54:         for hdr, value in headers.items():
   23:             request.append("%s: %s" % (hdr, value))
   31:         request_string = "\n".join(request) + "\n\n" + body
   31:         self._response = RESTCaller()(
                   request_string, handle_errors=handleErrors)
       
    1:     def getresponse(self):
   30:         return PublisherResponse(self._response)
       
    1:     def close(self):
   30:         self._response = None
       
       
    2: class PublisherResponse(object):
           """Adapter of Zope 3 response objects into httplib.HTTPResponse."""
       
    1:     def __init__(self, response):
   30:         self._response = response
   30:         self.status = response.getStatus()
   30:         self.reason = response._reason
       
    1:     def getheaders(self):
   30:         return self._response.getHeaders()
       
    1:     def read(self):
   30:         return self._response.consumeBody()
       
       
    2: class RESTClient(client.RESTClient):
    1:     zope.interface.implements(interfaces.IPublisherRESTClient)
       
    1:     connectionFactory = PublisherConnection
       
    1:     @apply
           def handleErrors():
               """See zope.testbrowser.interfaces.IBrowser"""
    1:         headerKey = 'X-zope-handle-errors'
       
    1:         def get(self):
    2:             return self.requestHeaders.get(headerKey, True)
       
    1:         def set(self, value):
    2:             current_value = get(self)
    2:             if current_value == value:
>>>>>>                 return
    2:             self.requestHeaders[headerKey] = value
       
    1:         return property(get, set)
