       ##############################################################################
       #
       # Copyright (c) 2007 Zope Corporation and Contributors.
       # All Rights Reserved.
       #
       # This software is subject to the provisions of the Zope Public License,
       # Version 2.1 (ZPL).  A copy of the ZPL should accompany this distribution.
       # THIS SOFTWARE IS PROVIDED "AS IS" AND ANY AND ALL EXPRESS OR IMPLIED
       # WARRANTIES ARE DISCLAIMED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
       # WARRANTIES OF TITLE, MERCHANTABILITY, AGAINST INFRINGEMENT, AND FITNESS
       # FOR A PARTICULAR PURPOSE.
       #
       ##############################################################################
       """Some basic traversers for REST
       
       $Id: http.py 72310 2007-02-01 21:39:01Z mkerrin $
    1: """
    1: import zope.interface
    1: from zope.publisher.interfaces.http import IHTTPPublisher
    1: from zope.app.container.interfaces import IItemContainer
    1: from zope.publisher.interfaces import NotFound
    1: from z3c.rest import interfaces, null
       
    2: class ItemTraverser(object):
    1:     zope.interface.implements(IHTTPPublisher)
    1:     zope.component.adapts(IItemContainer, interfaces.IRESTRequest)
       
    1:     def __init__(self, container, request):
   20:         self.context = container
   20:         self.request = request
       
    1:     def publishTraverse(self, request, name):
   23:         try:
   23:             return self.context[name]
   12:         except KeyError:
   12:             return self.nullResource(request, name)
       
    1:     def nullResource(self, request, name):
               # we traversed to something that doesn't exist.
       
               # The name must be the last name in the path, so the traversal
               # name stack better be empty:
   12:         if request.getTraversalStack():
    2:             raise NotFound(self.context, name, request)
       
               # This should only happen for a PUT:
   10:         if request.method != 'PUT':
    5:             raise NotFound(self.context, name, request)
       
    5:         return null.NullResource(self.context, name)
