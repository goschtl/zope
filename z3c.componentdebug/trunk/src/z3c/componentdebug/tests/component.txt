;-*-Doctest-*-
====================
Component Unit Tests
====================

    >>> from zope.interface import Interface
    >>> class IFoo(Interface): pass
    >>> class IFoo2(IFoo): pass
    >>> class IBar(Interface): pass
    >>> class IBaz(Interface): pass

    >>> from zope.interface import alsoProvides
    >>> class Foo(object): pass
    >>> foo = Foo()
    >>> alsoProvides(foo, IFoo)
    >>> class Bar(object): pass
    >>> bar = Bar()
    >>> alsoProvides(bar, IBar)

register an adapter to be returned::

    >>> from zope.component import provideAdapter
    >>> def getBaz(foo, bar): return 'baz'
    >>> provideAdapter(getBaz, (IFoo, IBar), IBaz)

    >>> from zope.component import queryMultiAdapter
    >>> queryMultiAdapter((foo, bar), IBaz)
    'baz'

register a utility for comparison::

    >>> from zope.component import provideUtility
    >>> provideUtility('qux', IBaz)

    >>> from zope.component import queryUtility
    >>> queryUtility(IBaz)
    'qux'

Verify inspection of an adapter registration::
    
    >>> from pprint import pprint
    >>> from z3c.componentdebug import inspect
    >>> registrations = inspect((foo, bar), IBaz)
    >>> pprint(registrations)
    [AdapterRegistration(<BaseGlobalComponents base>, [IFoo, IBar],
    IBaz, '', getBaz, u'')]
    >>> pprint([i for i in registrations.byObject()])
    [(<Foo object at ...>,
      [AdapterRegistration(<BaseGlobalComponents base>, [IFoo, IBar],
      IBaz, '', getBaz, u'')]),
     (<Bar object at ...>,
      [AdapterRegistration(<BaseGlobalComponents base>, [IFoo, IBar],
      IBaz, '', getBaz, u'')])]
    >>> pprint([i for i in registrations.byRegistration()])
    [(AdapterRegistration(<BaseGlobalComponents base>, [IFoo, IBar],
    IBaz, '', getBaz, u''),
      [<Foo object at ...>, <Bar object at ...>])]

Verify inspection of a utility::

    >>> registrations = inspect((), IBaz)
    >>> pprint(registrations)
    [UtilityRegistration(<BaseGlobalComponents base>, IBaz, u'',
    'qux', u'')]

Verify inspection of a all::

    >>> registrations = inspect(provided=IBaz)
    >>> pprint(registrations)
    [AdapterRegistration(<BaseGlobalComponents base>, [IFoo, IBar],
    IBaz, '', getBaz, u''),
     UtilityRegistration(<BaseGlobalComponents base>, IBaz, u'',
     'qux', u'')]

Multiple Registrations
----------------------

If there are multiple registrations, they should all be reported::

    >>> def getBaz2(foo, bar): return 'baz2'
    >>> provideAdapter(getBaz2, (IFoo2, IBar), IBaz)

    >>> alsoProvides(foo, IFoo2)
    >>> queryMultiAdapter((foo, bar), IBaz)
    'baz2'
    
    >>> registrations = inspect((foo, bar), IBaz)
    >>> pprint(registrations)
    [AdapterRegistration(<BaseGlobalComponents base>, [IFoo2, IBar],
    IBaz, '', getBaz2, u''),
     AdapterRegistration(<BaseGlobalComponents base>, [IFoo, IBar],
     IBaz, '', getBaz, u'')]
    >>> pprint([i for i in registrations.byObject()])
    [(<Foo object at ...>,
      [AdapterRegistration(<BaseGlobalComponents base>, [IFoo2, IBar],
      IBaz, '', getBaz2, u''),
       AdapterRegistration(<BaseGlobalComponents base>, [IFoo, IBar],
       IBaz, '', getBaz, u'')]),
     (<Bar object at ...>,
      [AdapterRegistration(<BaseGlobalComponents base>, [IFoo2, IBar],
      IBaz, '', getBaz2, u''),
       AdapterRegistration(<BaseGlobalComponents base>, [IFoo, IBar],
       IBaz, '', getBaz, u'')])]
    >>> pprint([i for i in registrations.byRegistration()])
    [(AdapterRegistration(<BaseGlobalComponents base>, [IFoo2, IBar],
    IBaz, '', getBaz2, u''),
      [<Foo object at ...>, <Bar object at ...>]),
     (AdapterRegistration(<BaseGlobalComponents base>, [IFoo, IBar],
     IBaz, '', getBaz, u''),
      [<Foo object at ...>, <Bar object at ...>])]

    >>> def getBaz3(foo, bar): return 'baz3'
    >>> provideAdapter(getBaz3, (IFoo, Interface), IBaz)
    
    >>> registrations = inspect((foo, bar), IBaz)
    >>> pprint(registrations)
    [AdapterRegistration(<BaseGlobalComponents base>, [IFoo2, IBar],
     IBaz, '', getBaz2, u''),
     AdapterRegistration(<BaseGlobalComponents base>, [IFoo, IBar],
     IBaz, '', getBaz, u''),
     AdapterRegistration(<BaseGlobalComponents base>, [IFoo,
     Interface], IBaz, '', getBaz3, u'')]
    >>> pprint([i for i in registrations.byObject()])
    [(<Foo object at ...>,
      [AdapterRegistration(<BaseGlobalComponents base>, [IFoo2, IBar],
      IBaz, '', getBaz2, u''),
       AdapterRegistration(<BaseGlobalComponents base>, [IFoo, IBar],
       IBaz, '', getBaz, u''),
       AdapterRegistration(<BaseGlobalComponents base>, [IFoo,
       Interface], IBaz, '', getBaz3, u'')]),
     (<Bar object at ...>,
      [AdapterRegistration(<BaseGlobalComponents base>, [IFoo2, IBar],
      IBaz, '', getBaz2, u''),
       AdapterRegistration(<BaseGlobalComponents base>, [IFoo, IBar],
       IBaz, '', getBaz, u''),
       AdapterRegistration(<BaseGlobalComponents base>, [IFoo,
       Interface], IBaz, '', getBaz3, u'')])]
    >>> pprint([i for i in registrations.byRegistration()])
    [(AdapterRegistration(<BaseGlobalComponents base>, [IFoo2, IBar],
    IBaz, '', getBaz2, u''),
      [<Foo object at ...>, <Bar object at ...>]),
     (AdapterRegistration(<BaseGlobalComponents base>, [IFoo, IBar],
     IBaz, '', getBaz, u''),
      [<Foo object at ...>, <Bar object at ...>]),
     (AdapterRegistration(<BaseGlobalComponents base>, [IFoo,
     Interface], IBaz, '', getBaz3, u''),
      [<Foo object at ...>, <Bar object at ...>])]

If there are registrations that don't match, the sort later::

    >>> from zope.interface import noLongerProvides
    >>> noLongerProvides(foo, IFoo2)
    >>> registrations = inspect((foo, bar), IBaz)
    >>> pprint(registrations)
    [AdapterRegistration(<BaseGlobalComponents base>, [IFoo, IBar],
    IBaz, '', getBaz, u''),
     AdapterRegistration(<BaseGlobalComponents base>, [IFoo,
     Interface], IBaz, '', getBaz3, u''),
     AdapterRegistration(<BaseGlobalComponents base>, [IFoo2, IBar],
     IBaz, '', getBaz2, u'')]
    >>> pprint([i for i in registrations.byObject()])
    [(<Foo object at ...>,
      [AdapterRegistration(<BaseGlobalComponents base>, [IFoo, IBar],
      IBaz, '', getBaz, u''),
       AdapterRegistration(<BaseGlobalComponents base>, [IFoo,
       Interface], IBaz, '', getBaz3, u'')]),
     (<Bar object at ...>,
      [AdapterRegistration(<BaseGlobalComponents base>, [IFoo, IBar],
      IBaz, '', getBaz, u''),
       AdapterRegistration(<BaseGlobalComponents base>, [IFoo,
       Interface], IBaz, '', getBaz3, u''),
       AdapterRegistration(<BaseGlobalComponents base>, [IFoo2, IBar],
       IBaz, '', getBaz2, u'')])]
    >>> pprint([i for i in registrations.byRegistration()])
    [(AdapterRegistration(<BaseGlobalComponents base>, [IFoo, IBar],
    IBaz, '', getBaz, u''),
      [<Foo object at ...>, <Bar object at ...>]),
     (AdapterRegistration(<BaseGlobalComponents base>, [IFoo,
     Interface], IBaz, '', getBaz3, u''),
      [<Foo object at ...>, <Bar object at ...>]),
     (AdapterRegistration(<BaseGlobalComponents base>, [IFoo2, IBar],
     IBaz, '', getBaz2, u''),
      [False, <Bar object at ...>])]

    >>> noLongerProvides(bar, IBar)
    >>> registrations = inspect((foo, bar), IBaz)
    >>> pprint(registrations)
    [AdapterRegistration(<BaseGlobalComponents base>, [IFoo,
    Interface], IBaz, '', getBaz3, u''),
     AdapterRegistration(<BaseGlobalComponents base>, [IFoo, IBar],
     IBaz, '', getBaz, u''),
     AdapterRegistration(<BaseGlobalComponents base>, [IFoo2, IBar],
     IBaz, '', getBaz2, u'')]
    >>> pprint([i for i in registrations.byObject()])
    [(<Foo object at ...>,
      [AdapterRegistration(<BaseGlobalComponents base>, [IFoo,
      Interface], IBaz, '', getBaz3, u''),
       AdapterRegistration(<BaseGlobalComponents base>, [IFoo, IBar],
       IBaz, '', getBaz, u'')]),
     (<Bar object at ...>,
      [AdapterRegistration(<BaseGlobalComponents base>, [IFoo,
      Interface], IBaz, '', getBaz3, u'')])]
    >>> pprint([i for i in registrations.byRegistration()])
    [(AdapterRegistration(<BaseGlobalComponents base>, [IFoo,
    Interface], IBaz, '', getBaz3, u''),
      [<Foo object at ...>, <Bar object at ...>]),
     (AdapterRegistration(<BaseGlobalComponents base>, [IFoo, IBar],
     IBaz, '', getBaz, u''),
      [<Foo object at ...>, False]),
     (AdapterRegistration(<BaseGlobalComponents base>, [IFoo2, IBar],
     IBaz, '', getBaz2, u''),
      [False, False])]
