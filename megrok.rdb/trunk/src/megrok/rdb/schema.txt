==================================
SQLAlchemy schema to Zope 3 schema
==================================

We can convert SQLAlchemy schemas to Zope 3 schemas, which can then
for instance be used to generate forms and the like.

First we define a model with a SQLAlchemy schema::

  >>> from sqlalchemy import Column, ForeignKey
  >>> from sqlalchemy.types import Integer, String
  >>> from sqlalchemy.orm import relation

  >>> from megrok import rdb
  >>> metadata = rdb.MetaData()
  >>> class Courses(rdb.Container):
  ...   pass

  >>> class Department(rdb.Model):
  ...   rdb.metadata(metadata)
  ...
  ...   id = Column('id', Integer, primary_key=True)
  ...   name = Column('name', String(50))
  ... 
  ...   courses = relation('Course', 
  ...                       backref='department',
  ...                       collection_class=Courses)
  
Let's grok the ``Department`` class now::

  >>> from grok.testing import grok
  >>> grok('megrok.rdb.meta')
  >>> grok('megrok.rdb.schema')
  >>> __file__ = 'foo' # hack
  >>> from grok.testing import grok_component
  >>> grok_component('Courses', Courses)
  True
  >>> grok_component('Department', Department)
  True

We then convert the schema to a Zope 3 schema::

  >>> from megrok.rdb.schema import schema_from_model
  >>> schema = schema_from_model(Department)

The schema will have one field, ``name``::

  >>> list(schema)
  ['name']

The name field will be a TextLine::

  >>> from zope.schema import TextLine
  >>> isinstance(schema['name'], TextLine)
  True

