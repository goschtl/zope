.. _getting-started:

Getting Started
===============

The plug-ins used for a test are composed together using the "+" operator.
Let's say you wanted a test that used doctest syntax as well as footnotes.  You
would create a Manuel instance to use like this:

.. code-block:: python

    import manuel.doctest
    import manuel.footnote

    m = manuel.doctest.Manuel() + manuel.footnote.Manuel()

You would then pass the Manuel instance to a :class:`manuel.testing.TestSuite`,
including the names of documents you want to process:

.. ignore-next-block
.. code-block:: python

    manuel.testing.TestSuite(m, 'test-one.txt', 'test-two.txt')


Using unittest
--------------

The simplest way to get started with Manuel is to use :mod:`unittest` to run
your tests:

.. code-block:: python

    import manuel.codeblock
    import manuel.doctest
    import manuel.testing
    import unittest

    def test_suite():
        m = manuel.doctest.Manuel()
        m += manuel.codeblock.Manuel()
        return manuel.testing.TestSuite(m, 'test-one.txt', 'test-two.txt')

    if __name__ == '__main__':
        unittest.TextTestRunner().run(test_suite())


Using zope.testing
------------------

If you want to use a more featurfull test runner you can use zope.testing's
test runner (usable stand-alone -- it isn't dependent on the Zope application
server).  Create a file named :file:`tests.py` with a :func:`test_setup`
function that returns a test suite.

The suite can be either a :class:`manuel.testing.TestSuite` object or a
:class:`unittest.TestSuite` as demonstrated below.

.. code-block:: python

    import manuel.codeblock
    import manuel.doctest
    import manuel.testing

    def test_suite():
        suite = unittest.TestSuite()

        # here you add your other tests to the suite...

        # now you can add the Manuel tests
        m = manuel.doctest.Manuel()
        m += manuel.codeblock.Manuel()
        suite.addTest(manuel.testing.TestSuite(m,
            'test-one.txt', 'test-two.txt'))

        return suite


Others
------

If you figure out how to make Manuel work with other test runners (nose,
py.test, etc.), please `send me an email`_ and I'll expand this section.

.. _send me an email: benji+manuel@benjiyork.com
