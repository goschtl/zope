Introduction
============

Manuel lets you mix and match traditional doctests with custom test syntax.

Several plug-ins are included that provide new test syntax (see
:ref:`functionality`).  You can also create your own plug-ins.

For example, if you've ever wanted to include a large chunk of Python in a
doctest but were irritated by all the ">>>" and "..." prompts required, you'd
like the :mod:`manuel.codeblock` module.  It lets you execute code using
Sphinx-style "..  code-block:: python" directives.  The markup looks like
this::

    .. code-block:: python

        import foo

        def my_func(bar):
            return foo.baz(bar)

Incidentally, the implementation of :mod:`manuel.codeblock` is only 22 lines of
code.

The plug-ins included in Manuel make good examples while being quite useful in
their own right.  The Manuel documentation makes extensive use of them as well.
All the included plug-ins are listed in the :ref:`next section
<functionality>`.

For a large example of creating test syntax, take a look at the
:ref:`fit-table-example` or for all the details, :ref:`theory-of-operation`.

To see how to get Manuel wired up see the :ref:`getting-started` section.
