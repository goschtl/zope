Introduction
============

Manuel lets you mix and match traditional doctests with new test syntax that
you create or is included in Manuel.

For example, if you've ever wanted to include a large chunk of Python in a
doctest but were irritated by all the ">>>" and "..." prompts required, you'd
like the "manuel.codeblock" module.  It lets you include code using Sphinx-style
"..  code-block:: python" directives, like so:

.. code-block:: python

    import foo

    def my_func(bar):
        return foo.baz(bar)

Incidentally, the implementation of manuel.codeblock is only 24 lines of code.

For an example of creating your own test syntax, take a look at
table-example.txt or for full details, README.txt.


Included Functionality
======================

Manuel includes several extentions to doctest out of the box.

manuel.codeblock
    executes code in ".. code-block:: python" blocks

manuel.footnote
    executes code in reST-style footnodes each time they're referenced (good
    for getting incedental code out of the main flow of a document)

manuel.isolation
    makes it easier to have test isolation in doctests
