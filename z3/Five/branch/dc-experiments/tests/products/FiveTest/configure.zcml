<configure xmlns="http://namespaces.zope.org/zope"
           xmlns:browser="http://namespaces.zope.org/browser"
           xmlns:five="http://namespaces.zope.org/five">

  <!-- this is a test whether five:viewable can be called more than
       once on a class; SimpleContent inherits from api.Viewable, so
       one directive suffices here -->

  <five:traversable class=".simplecontent.SimpleContent" />


  <!-- this tests whether five:viewable can be called on a class that
       already provides __bobo_traverse__, such as our FancyContent -->

  <five:traversable class=".fancycontent.FancyContent" />


  <adapter
      for=".interfaces.IAdaptable"
      provides=".interfaces.IAdapted"
      factory=".classes.Adapter"
      />

  <!-- attribute page -->
  <browser:page
      for=".interfaces.ISimpleContent"
      class=".browser.SimpleContentView"
      attribute="eagle"
      name="eagle.txt"
      permission="zope2.ViewManagementScreens"
      />

  <browser:page
      for=".interfaces.IFancyContent"
      class=".browser.FancyContentView"
      attribute="view"
      name="fancy"
      permission="zope2.Public"
      />

  <browser:pages
      for=".interfaces.ISimpleContent"
      class=".browser.NoDocstringView"
      permission="zope2.Public">
    <browser:page
        name="nodoc-method"
        attribute="method"
        />
    <browser:page
        name="nodoc-function"
        attribute="function"
        />
    <browser:page
        name="nodoc-object"
        attribute="object"
        />
  </browser:pages>

  <!-- attribute page -->
  <browser:pages
      for=".interfaces.ISimpleContent"
      class=".browser.SimpleContentView"
      permission="zope2.ViewManagementScreens"
      >
    <browser:page
        name="eagle-page.txt"
        attribute="eagle"
        />
    <browser:page
        name="mouse-page.txt"
        attribute="mouse"
        />
  </browser:pages>

  <!-- template/class page -->
  <browser:page
      for=".interfaces.ISimpleContent"
      class=".browser.SimpleContentView"
      template="falcon.pt"
      name="falcon.html"
      permission="zope2.ViewManagementScreens"
      />

  <!-- template page (with simple python expression) -->
  <browser:page
      for=".interfaces.ISimpleContent"
      template="owl.pt"
      name="owl.html"
      permission="zope2.ViewManagementScreens"
      />

  <!-- template page which calls on context using python -->
  <browser:page
      for=".interfaces.ISimpleContent"
      template="flamingo.pt"
      name="flamingo.html"
      permission="zope2.ViewManagementScreens"
      />

  <!-- template page which calls on context using path -->
  <browser:page
      for=".interfaces.ISimpleContent"
      template="flamingo2.pt"
      name="flamingo2.html"
      permission="zope2.ViewManagementScreens"
      />

  <!-- template/class page which calls on context, view, views -->
  <browser:page
      for=".interfaces.ISimpleContent"
      class=".browser.SimpleContentView"
      template="condor.pt"
      name="condor.html"
      permission="zope2.ViewManagementScreens"
      />

  <!-- test TALES -->
  <browser:page
      for=".interfaces.ISimpleContent"
      template="ostrich.pt"
      name="ostrich.html"
      permission="zope2.ViewManagementScreens"
      />

  <browser:page
      for=".interfaces.ISimpleContent"
      template="ostrich2.pt"
      name="ostrich2.html"
      permission="zope2.ViewManagementScreens"
      />

  <!-- macro page -->
  <browser:page
      for=".interfaces.ISimpleContent"
      template="bird.pt"
      name="bird.pt"
      permission="zope2.ViewManagementScreens"
      />

  <!-- macro aggregation page -->
  <browser:page
      for="*"
      name="fivetest_macros"
      permission="zope2.View"
      class=".browser.StandardMacros"
      allowed_interface="zope.interface.common.mapping.IItemMapping"
      />

  <browser:page
      for=".interfaces.ISimpleContent"
      template="bird.pt"
      name="bird_macros"
      permission="zope2.ViewManagementScreens"
      />

  <browser:page
      for=".interfaces.ISimpleContent"
      template="dog.pt"
      name="dog_macros"
      permission="zope2.ViewManagementScreens"
      />


  <!-- template page that uses macro page -->
  <browser:page
      for=".interfaces.ISimpleContent"
      class=".browser.SimpleContentView"
      template="seagull.pt"
      name="seagull.html"
      permission="zope2.ViewManagementScreens"
      />

  <!-- a publicly accessible page, attribute, template, template/class -->

  <browser:page
      for=".interfaces.ISimpleContent"
      class=".browser.SimpleContentView"
      attribute="eagle"
      name="public_attribute_page"
      permission="zope2.Public"
      />

  <browser:page
      for=".interfaces.ISimpleContent"
      template="owl.pt"
      name="public_template_page"
      permission="zope2.Public"
      />

  <browser:page
      for=".interfaces.ISimpleContent"
      class=".browser.SimpleContentView"
      template="falcon.pt"
      name="public_template_class_page"
      permission="zope2.Public"
      />


  <!-- a couple simple resources -->
  <browser:resource
      template="cockatiel.pt"
      name="cockatiel.html"
      permission="zope2.ViewManagementScreens"
      />

  <browser:resource
      file="style.css"
      name="style.css"
      permission="zope2.ViewManagementScreens"
      />

  <browser:resource
      image="pattern.png"
      name="pattern.png"
      permission="zope2.ViewManagementScreens"
      />

  <browser:resourceDirectory
      name="fivetest_resources"
      directory="."
      permission="zope2.ViewManagementScreens"
      />

  <!-- stuff that we'll override in overrides.zcml -->

  <browser:page
      for=".interfaces.ISimpleContent"
      class=".browser.SimpleContentView"
      attribute="eagle"
      name="overridden_view"
      permission="zope2.Public"
      />

  <adapter
      for=".interfaces.IOrigin"
      provides=".interfaces.IDestination"
      factory=".classes.OriginalAdapter"
      />

</configure>
