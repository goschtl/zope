==========================
JavaScript Form Validation
==========================

Server-side validation via AJAX

Message Validator
-----------------

This validator returns an error message for a given widget.

    >>> from z3c.formjs import interfaces as jsinterfaces
    >>> from z3c.formjs import jsvalidator, jsevent, jsaction
    >>> from z3c.form import form, field, interfaces

    >>> from z3c.form.testing import setupFormDefaults
    >>> setupFormDefaults()

    >>> import zope.component
    >>> from z3c.form import error
    >>> zope.component.provideAdapter(error.ValueErrorViewSnippet)


    >>> import zope.interface
    >>> import zope.schema
    >>> class IAddress(zope.interface.Interface):
    ...     zip = zope.schema.Int(title=u"Zip Code")


    >>> class AddressEditForm(jsvalidator.MessageValidator, form.AddForm):
    ...     fields = field.Fields(IAddress)
    ...
    ...     @jsaction.handler(interfaces.IField, event=jsevent.CHANGE)
    ...     def fieldValidator(self, event, selector):
    ...         return self.ValidationScript(self, selector.widget).render()

    >>> from z3c.form.testing import TestRequest
    >>> request = TestRequest()
    >>> from jquery.layer import IJQueryJavaScriptBrowserLayer
    >>> import zope.interface
    >>> zope.interface.alsoProvides(request, IJQueryJavaScriptBrowserLayer)

    >>> edit = AddressEditForm(None, request)
    >>> edit.update()

We will register a jquery renderer.

    >>> import zope.component
    >>> from z3c.formjs import jqueryrenderer
    >>> zope.component.provideAdapter(
    ...     jqueryrenderer.JQueryMessageValidationScriptRenderer)

    >>> print edit.fieldValidator(
    ...     None, jsaction.WidgetSelector(edit.widgets['zip']), request)
    $.get("http://127.0.0.1/validate" +
          "?widget-name=zip&form.widgets.zip=" +
          $("#form-widgets-zip").val(),
          function(data){
              if (data != "") { alert(data); }
          })

    >>> from zope.publisher.interfaces import IPublisherRequest
    >>> from z3c.traverser import traverser
    >>> zope.component.provideSubscriptionAdapter(
    ...     traverser.AttributeTraverserPlugin,
    ...     (jsinterfaces.IAJAXValidator, IPublisherRequest))

    >>> from z3c.traverser.traverser import PluggableTraverser
    >>> request = TestRequest(form={'widget-name' : 'zip',
    ...                             'form.widgets.zip' : u'29132'})
    >>> edit = AddressEditForm(None, request)
    >>> edit.update()
    >>> PluggableTraverser(edit, request).publishTraverse(request, 'validate')()
    u''

    >>> request = TestRequest(form={'widget-name': 'zip',
    ...                             'form.widgets.zip':'notazipcode'})
    >>> edit = AddressEditForm(None, request)
    >>> edit.update()
    >>> PluggableTraverser(edit, request).publishTraverse(request, 'validate')()
    u'The system could not process the given value.'
