========================
Using blobs with ZEORaid
========================

ZEORaid supports the usage of blobs under different scenarios. This file
describes the various valid and invalid configuration scenarios and documents how
ZEORaid behaves under those conditions.

We split the configuration scenarios in two parts: front end configuration and
back end configuration. Any of the front end configurations can be combined
with all backend configurations.

Valid front end configurations
==============================

Front end configuration describes how blobs are transferred between the ZEO
clients and the ZEORaid server.

No support or no blob support configured
----------------------------------------

The ZEO client does not support blobs or doesn't have blob support configured.
In this case any configuration on the ZEORaid server becomes irrelevant. We
recommend to not configure blob support on the ZEORaid server to avoid
accidental inconsistencies.

Blobs via ZEO protocol
----------------------

The ZEO clients all contain a separate directory as a `cache` for blobs. The
option `shared-blob-dir` is set to `false`. This causes the blobs to be
transferred to and from the ZEORaid server via the ZEO protocol.

Blobs via file system shared with ZEORaid
-----------------------------------------

The ZEO clients are configured with a `blob-dir` that points to a directory
that is shared between all ClientStorages and the RAIDStorage's
`blob-directory` on the ZEORaid server.

The ClientStorages are configured with `shared-blob-dir` set to `true`.


Valid back end configurations
=============================

RAIDStorage and back-ends with a single shared file system
----------------------------------------------------------

- blob-dir configured to a directory shared between raidstorage,
  clientstorages and back-end servers (read/write for all participants)

- shared-blob-dir for raidstorage and clientstorages set to `true`


RAIDStorage via storage API and back-ends with individual shared file systems
-----------------------------------------------------------------------------

- RAIDStorage and ClientStorages have separate blob directories

- each ClientStorage shares its blob directory with its ZEO server

- RAIDStorage has shared-blob-dir set to false

- ClientStorages have shared-blob-dir set to true


RAIDStorage via storage API and back end via ZEO protocol
---------------------------------------------------------

- blob-dir configured to separate directories in raidstorage, clientstorages
  and back-end servers

- shared-blob-dir for raidstorage and clientstorages set to `false`

Invalid back end configurations
===============================

Mixture of shared and non-shared
--------------------------------

- The raidstorage having a shared directory with the zeo clients but the zeo
  clients not sharing with the back end servers is unsupported.

- The raidstorage using the storage API against zeo clients which share their
  blob directory is unsupported.

Warning: ZEORaid can not automatically detect those invalid combinations and
might destroy data if those are configured.

