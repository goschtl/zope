TransientObjectContainer - Manage

  Transient Object Containers

     A Transient Object Container contains objects which expire after
     a user-settable period of time.  Items placed into transient object
     must have string keys, but may have any type of value.

  Common Usages

     A Transient Object Container is used by Session Data Mangers to store
     session data.

  To create a Transient Object Container, specify the following:

     - **Id**

       The Zope id of the Transient Object Container.

     - **Title**

       *Optional*

       The title of the object.

     - **Data object timeout in minutes**

       The minimum number of minutes that objects in the container will
       persist for.  Objects in the container are passively deleted, so
       they may not be deleted exactly after this number of minutes elapses.

       If you change the timeout value, all objects in the transient
       container will be flushed.

       If the timeout value is "0", objects will not time out.

     - **Script to call when objects are added**

       *Optional*

       The physical path of of a Zope script which will receive notifications
       when objects are added to the Transient Object Container.

       Ex: '/path/to/add/script'.

       For more information, see "Add and Delete Scripts" below.

     - **Script to call when objects are deleted**

       *Optional*

       The physical path of a Zope script which will receive notifications
       when objects are deleted from the Transient Object Container, either
       explicitly or through timeout-related expiration.

       Ex: '/path/to/delete/script'

       For more information, see "Add and Delete Scripts" below.

  Add and Delete Scripts

        Add and Delete scripts are Zope scripts which are called,
        respectively, when an object is added or removed from a
        Transient Object Container.   An add or delete script is specified
        by naming it by its full Zope object path with slash separators,
        e.g. "/path/to/method".

	Add and delete scripts are called with two arguments.  The first
	argument is the item being added or removed from the container;
        the second argument is the Transient Object Container itself.
        The container will be acquisition wrapped, allowing the
        it to be used as a context to reference other Zope objects.

        An example of an External Method used as a delete script::
  
             def deleteScript(item, container):
                 from zLOG import LOG
                 LOG(100, 'test', 'id: %s' % item.getId())

  See Also

     - "Transience API":TransienceInterfaces.py

