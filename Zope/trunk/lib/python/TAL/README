TAL - Template Attribute Language
---------------------------------

This is a prototype implementation of TAL, the Zope Template Attribute
Language.  For TAL, see the Zope Presentation Templates ZWiki:

    http://dev.zope.org/Wikis/DevSite/Projects/ZPT/FrontPage

It is not yet a Zope product nor is it intended to run inside of Zope,
but you must have a Zope checkout to access the DOM implementation
used.

Prerequisites
-------------

You need:

- A recent checkout of Zope2; don't forget to run the wo_pcgi.py
  script to compile everything.

- A recent checkout of the Zope2 product ParsedXML, accessible
  throught <Zope2>/lib/python/Products/ParsedXML; don't forget to run
  the setup.py script to compiles Expat.

- Python 1.5.2; the driver script refuses to work with other versions
  unless you specify the -n option; this is done so that I don't
  accidentally use Python 2.x features.

- Edit the setpath.py script to set the proper module search path; the
  variable libPython should be set to the <Zope2>/lib/python directory
  that you want to use.

How To Play
-----------

(Don't forget to edit setpath.py, see above!)

The script driver.py takes an XML file with TAL markup as argument and
writes the expanded version to standard output.  The filename argument
defaults to test/test1.xml.

Regression test
---------------

There are a number of test cases in the test subdirectory, named
test/test<number>.xml.  The Python script ./runtest.py runs
./driver.py for each test case, and should print "<file> OK" for each
testcase.  You can pass it command line options like -c or -m which
will be passed on to driver.py; note that in this case some tests will
fail, and a diff will be printed.

What's Here
-----------

DOMVisitor.py		base class to create DOM visitor classes
CopyingDOMVisitor.py	class to copy DOM trees
TALVisitor.py		class to copy DOM trees with TAL expansion
DummyEngine.py		simple-minded TALES execution engine
driver.py		script to demonstrate TAL expansion
timer.py		script to time various processing phases
setpath.py		hack to set sys.path and import ZODB
__init__.py		empty file that makes this directory a package
runtest.py		Python script to run regression tests
ndiff.py		helper for runtest.py to produce diffs
runtest.sh		shell script to run regression tests (old)
test/			drectory with test files and output

Author and License
------------------

This code is written by Guido van Rossum.  It is owned by Digital
Creations and can be redistributed under the Zope Public License.

TO DO
-----

Here are some things that should be done.

- Fix the tweaking of the define-macro attribute on macro expansion so
  that:
  (1) it is only tweaked if the proper prefix is used; and
  (2) the argument is taken from the use-macro attribute.

- Provide a framework for error messages (currently it just prints to
  stdout).

- Provide a dummy implementation of evaluateStructure()?

- Check for attempt to replace the documentElement.  (Exception: when
  replacing with a single element?  Should it be the same tag?)

- Speed up findMacro()?

- When using z:replace="structure ...", should make a copy of the
  nodes; perhaps the data should be a documentFragment node?

It's unclear on what to do about these items:

- A comment (or other non-element node) before the documentElement.

- The DOMVisitor class assumes that only Document and Element nodes
  have children.
