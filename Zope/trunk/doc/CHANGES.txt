Zope Changes

  This file contains change information for the current Zope release.
  Change information for previous versions of Zope can be found in the
  file HISTORY.txt.


  Trunk (unreleased)

    Restructuring

      - Updated to ZODB 3.9.0a10. ZODB-level version support has been
        removed and ZopeUndo now is part of Zope2.

      - The Zope2 SVN trunk is now a buildout pulling in all dependencies as
        actual released packages and not SVN externals anymore.

      - Make use of the new zope.container and zope.site packages.

      - Updated to newer versions of zope packages. Removed long deprecated
        layer and skin ZCML directives.

      - Disabled the XML export on the UI level - the export functionality
        however is still available on the Python level.

      - No longer show the Help! links in the ZMI, if there is no help
        available. The help system depends on the product registry.

      - Updated the quick start page and simplified the standard content.
        The default index_html is now a page template.

      - Removed deprecated Draft and Version support from Products.OFSP.
        Also removed version handling from the control panel. Versions are
        no longer supported on the ZODB level.

      - Removed left-overs of the deprecated persistent product distribution
        mechanism.

      - The persistent product registry is not required for starting Zope
        anymore. `enable-product-installation` can be set to off if you don't
        rely on the functionality provided by the registry.

      - ZClasses have been deprecated for two major releases. They have been
        removed in this version of Zope.

      - Avoid deprecation warnings for the md5 and sha modules in Python 2.6
        by adding conditional imports for the hashlib module.

      - Replaced  imports from the 'Globals' module throughout the 
        tree with imports from the actual modules;  the 'Globals' module
        was always intended to be an area for shared data, rather than
        a "facade" for imports.  Added zope.deferred.deprecation entries
        to 'Globals' for all symbols / modules previously imported directly.

      - Updated 'pytz' from '2007f' to '2008i'.

      - Moved svn:externals for 'mechanize', 'ClientPath', and 'pytz' to
        versions managed outside the Zope3 trunk.

      - Protect against non-existing zope.conf path and products directories.
        This makes it possible to run a Zope instance without a Products or
        lib/python directory.

      - updated to ZODB 3.8.1

      - Moved exception MountedStorageError from ZODB.POSExceptions
        to Products.TemporaryFolder.mount (now its only client).

      - LP #253362:  Moved Zope2-specific module, ZODB/Mount.py, to
        Products/TemporaryFolder/mount.py (its only client is
        Products/TemporaryFolder/TemporaryFolder.py).

      - Removed spurious import-time dependencies from
        Products/ZODBMountPoint/MountedObject.py.

      - Removed Examples.zexp from the skeleton. The TTW shopping cart isn't
        any good example of Zope usage anymore.

      - Removed deprecated ZTUtil.Iterator module

      - Removed deprecated StructuredText module

      - Removed deprecated TAL module

      - Removed deprecated modules from Products.PageTemplates.

      - Removed deprecated ZCML directives from Five including the whole
        Five.site subpackage.

      - Moved two implements declarations from Five into the proper classes.

      - Document.sequence: replaced by zope.sequencesort

      - All Products folders as well as the zope and zope.app folders are
        declared as setuptools namespace packages now. See
        http://peak.telecommunity.com/DevCenter/setuptools#namespace-packages
        for more information about namespace packages.

      - ZPT: removed display of ZPT warnings since warnings were
        removed from the zope.pagetemplate implementation     

      - Ship Zope with a standard docutils 0.4 distribution, instead
        of a patched one.  Both trusted and untrusted code are still
        protected against unwanted file inclusion.

      - Removed ZGadflyDA (was deprecated since Zope 2.9). The code is
        still available from svn.zope.org/Products.ZGadflyDA.

      - Removed OFS.content_types (was deprecated since Zope 2.9)

      - Indexes: Removed unused parameters from '_apply_index' methods.

      - Removed deprecated support for product initialization based on
        '__ac_permissions__' and 'meta_types' attributes.

    Features added

      - Acquisition has been made aware of __parent__ pointers. This allows
        direct access to many Zope 3 classes without the need to mixin
        Acquisition base classes for the security to work.

      - Zope2 startup: Zope will now send DatabaseOpened and
        ProcessStarting events.

      - Testing.ZopeTestCase: Introduced a "ZopeLite" test layer, making it
        possible to mix ZTC and non-ZTC tests much more freely.

      - Testing/custom_zodb.py: added support use a different storage other
        than DemoStorage. A dedicated FileStorage can be mount by setting
        the $TEST_FILESTORAGE environment variable to a custom Data.fs
        file.  A ZEO server can be configured using the $TEST_ZEO_HOST and
        $TEST_ZEO_PORT environment variables. This new functionality allows
        us to use the standard Zope testrunner for writing and running
        tests against existing Zope installations.

      - The ZPublisher HTTP request has now both the debug and locale
        attributes available, like its Zope 3 counterpart. The debug
        attribute was so far limited to code from the zope.* namespace in
        order to make the Zope 3 ZPT engine work. The locale attribute
        provides access to an zope.i18n.interfaces.locales.ILocale object
        with access to locale related information like date / time
        formatting or translated language and country names. Form variables
        of both debug and locale will shadow these two attributes and their
        use is therefor discouraged.

      - MailHost: now uses zope.sendmail for delivering the mail. With this
        change MailHost integrates with the Zope transaction system (avoids
        sending dupe emails in case of conflict errors). In addition
        MailHost now provides support for asynchronous mail delivery. The
        'Use queue' configuration option will create a mail queue on the
        filesystem (under 'Queue directory') and start a queue thread that
        checks the queue every three seconds. This decouples the sending of
        mail from its delivery.  In addition MailHosts now supports
        encrypted connections through TLS/SSL.

      - integrated ZODB 3.8
    
      - integrated Zope 3.4

      - Support for using zopectl on Windows has been added. All commands are
        supported and there are two Windows specific ones: install and remove,
        which install or remove the Windows service. The start, stop and
        restart commands handle the Windows service. In order to use them, you
        need to call 'bin\zopectl install' once.

      - ZCatalog result objects (catalog brains) now have an interface,
        ZCatalog.interfaces.ICatalogBrain.

      - A new module, AccessControl.requestmethod, provides a decorator
        factory that limits decorated methods to one request method only.
        For example, marking a method with @requestmethod('POST') limits
        that method to POST requests only when published. Several
        security-related methods have been limited to POST only.

      - PythonScripts: allow usage of Python's 'sets' module

      - added 'fast_listen' directive to http-server and
        webdav-source-server sections in etc/zope.conf in order to defer
        the opening of the sockets until the late startup phase. This in in
        particular useful when running Zope behind a loadbalancer (patch by
        Patrick Gerken).

      - AccessControl.Role: added new method
        manage_getUserRolesAndPermissions().

      - AccessControl: the form behind the "Security" tab has a new form
        for user-related reporting of permissions and roles

      - Zope 3-based exception views can now be registered in ZCML for
        various exceptions that can be raised by Zope. Registering an
        exception view can be done like this:

          <browser:page
            for="zope.publisher.interfaces.INotFound"
            class=".view.SomeView"
            name="index.html"
            permission="zope.Public" />

        Relevant exceptions that can have views are:

        zope.interface.common.interfaces.IException
        zope.publisher.interfaces.INotFound
        zope.security.interfaces.IForbidden
        zope.security.interfaces.IUnauthorized

        Note that the name has to be 'index.html' for the exception
        view to work. (patch by Sidnei da Silva from Enfold,
        integration by Martijn Faassen (Startifact) for Infrae)

      - DateTime now uses pytz for time zone data. This means support
        for more time zones and up to date daylight saving time
        information.

      - SiteErrorLog now includes the entry id in the information copied to
        the event log. This allowes you to correlate a user error report with
        the event log after a restart, or let's you find the REQUEST
        information in the SiteErrorLog when looking at a traceback in the
        event log.

    Bugs Fixed

      - Specified height/width of icons in ZMI listings so the table doesn't
        jump around while loading.

      - Acquisition wrappers now correctly proxy __iter__.

      - Launchpad #174705:  ensure that the error info object exposed to a
        'tal:on_error' handler has attributes visible to restricted code.

      - After the proper introduction of parent-pointers, it's now
        wrong to acquisition-wrap content providers. We will now use
        the "classic" content provider expression from Zope 3.
    
      - Testing.ZopeTestCase: Remove quota argument from DemoStorage calls in
        preparation for ZODB 3.9.

      - Ported c69896 to Five. This fix makes it possible to provide a
        template using Python, and not have it being set to `None` by
        the viewlet manager directive.
    
      - Made Five.testbrowser compatible with mechanize 0.1.7b.

      - Testing.ZopeTestCase: installPackage was tied to the ZopeLite layer.

      - Launchpad #280334: Fixed problem with 'timeout'
        argument/attribute missing in testbrowser tests.

      - Launchpad #267834: proper separation of HTTP header fields   
        using CRLF as requested by RFC 2616.

      - Launchpad #257276: fix for possible denial-of-service attack
        in PythonScript when passing an arbitrary module to the encode()
        or decode() of strings.

      - Launchpad #257269: 'raise SystemExit' with a PythonScript could shutdown
        a complete Zope instance

      - DateTime conversion of datetime objects with non-pytz tzinfo. 
        Timezones() returns a copy of the timezone list (allows tests to run).

      - LP #253362: better dealing with malformed HTTP_ACCEPT_CHARSET headers

      - Launchpad #246748: added 'immediate' option to sendXXX() methods
        for sending a mail immediately by-passing the zope.sendmail delivery
        mechanism

      - Launchpad #246290: fixed backward compatibility issue

      - Fixed against-the-rules zope.conf option 'fast_listen' to read
        'fast-listen' (dash, not underscore).

      - Switch to branch of 'zope.testbrowser' external which suppresses
        over-the-wire tests.

      - Launchpad #143902: Fixed App.ImageFile to use a stream iterator to
        output the file. Avoid loading the file content when guessing the
        mimetype and only load the first 1024 bytes of the file when it cannot
        be guessed from the filename.

      - Changed PageTemplateFile not to load the file contents on Zope startup
        anymore but on first access instead. This brings them inline with the
        zope.pagetemplate version and speeds up Zope startup.

      - Collector #2278: form ':record' objects did not implement enough
        of the mapping protocol.

      - "version.txt" file was being written to the wrong place by the
        Makefile, causing Zope to report "unreleased version" even for
        released versions.

      - Five.browser.metaconfigure.page didn't protect names from interface
        superclasses (http://www.zope.org/Collectors/Zope/2333)

      - DAV: litmus "notowner_modify" tests warn during a MOVE request
        because we returned "412 Precondition Failed" instead of "423
        Locked" when the resource attempting to be moved was itself
        locked.  Fixed by changing Resource.Resource.MOVE to raise the
        correct error.

      - DAV: litmus props tests 19: propvalnspace and 20:
        propwformed were failing because Zope did not strip off the
        xmlns: attribute attached to XML property values.  We now strip
        off all attributes that look like xmlns declarations.

      - DAV: When a client attempted to unlock a resource with a token
        that the resource hadn't been locked with, in the past we
        returned a 204 response.  This was incorrect.  The "correct"
        behavior is to do what mod_dav does, which is return a '400
        Bad Request' error.  This was caught by litmus
        locks.notowner_lock test #10.  See
        http://lists.w3.org/Archives/Public/w3c-dist-auth/2001JanMar/0099.html
        for further rationale.

      - When Zope properties were set via DAV in the "null" namespace
        (xmlns="") a subsequent PROPFIND for the property would cause the
        XML representation for that property to show a namespace of
        xmlns="None".  Fixed within OFS.PropertySheets.dav__propstat.

      - integrated theuni's additional test from 2.11 (see r73132)

      - Relaxed requirements for context of
        Products.Five.browser.pagetemplatefile.ZopeTwoPageTemplateFile,
        to reduce barriers for testing renderability of views which
        use them.
        (http://www.zope.org/Collectors/Zope/2327)

      - PluginIndexes: Fixed 'parseIndexRequest' for false values.

      - Collector #2263: 'field2ulines' did not convert empty string
        correctly.

      - Collector #2198: Zope 3.3 fix breaks Five 1.5 test_getNextUtility

      - Prevent ZPublisher from insering incorrect <base/> tags into the
        headers of plain html files served from Zope3 resource directories.
      
      - Changed the condition checking for setting status of
        HTTPResponse from to account for new-style classes.
      
      - The Wrapper_compare function from tp_compare to tp_richcompare.
        Also another function Wrapper_richcompare is added.
      
      - The doc test has been slightly changed in ZPublisher to get
        the error message extracted correctly.

      - The changes made in Acquisition.c in Implicit Acquisition
        comparison made avail to Explicit Acquisition comparison also.

      - zopedoctest no longer breaks if the URL contains more than one
        question mark. It broke even when the second question mark was
        correctly quoted.

    Other Changes

      - Added lib/python/webdav/litmus-results.txt explaining current
        test results from the litmus WebDAV torture test.

      - DocumentTemplate.DT_Var.newline_to_br(): Simpler, faster implementation.

