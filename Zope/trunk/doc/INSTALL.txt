
*** These instructions pertain to the new-install-branch! ***


Building and installing Zope from source
----------------------------------------

  This document describes building and installing Zope on UNIX and
  Linux.

System requirements when building from source

   bash or another Bourne shell variant
   Python 2.2.2 or later installed somewhere in the system PATH
   GNU make
   A C compiler (gcc recommended)

Quick Start

  It is best to install Zope as a non-root user.

  If you are impatient, the following commands should get you up and
  running on any UNIX that meet the system requirements::

    $ gunzip -c Zope-2.7.X-src.tar.gz | xar xvf
    $ cd Zope-2.7.X
    $ ./configure --prefix=/where/to/install/zope
    $ make
    $ make instance

  These commands locate an appropriate version of Python, build Zope,
  and create a usable Zope "instance" in the directory in which the
  software was un-tarred.  The last of these commands will prompt you
  to provide a user name and password for an administrator's account.

  You can now start Zope by running::

    $ ./bin/runzope

  If you get errors indicating that addresses are in use, then you
  will have to supply arguments to runzope to change the ports used
  for HTTP or FTP. The default HTTP and FTP ports used by Zope are
  8080 and 8021 respectively. You can change the ports used by
  specifying the "port-base" parameter to runzope.  For example, to
  run Zope on ports 9080 and 9021:

    $ ./bin/runzope -X port-base=1000

  You can then connect to Zope by directing your browser to::

     http://yourhost:8080/manage

  .. where 'yourhost' is the DNS name or IP address of the machine
  running Zope.  If you changed the HTTP port as described, use a port
  number of 8080 + the port-base value.

  You will be prompted for a user name and password. Use the user name
  and password you provided in response to the prompts issued during
  the "make instance" process.

  Now you're off and running! You should be looking at the Zope
  management screen which is divided into two frames. On the left you
  can navigate between Zope objects and on the right you can edit them
  by selecting different management functions with the tabs at the top
  of the frame.

  If you haven't used Zope before, you should head to the Zope web
  site and read some documentation. The Zope Book is a good place to
  start. You can access the Zope Book at:

    http://www.zope.org/Documentation/Books/ZopeBook

  Have fun!

Building Zope

  If you want to try out Zope in a more permanent fashion, then run the
  conventional UNIX build sequence::

    ./configure --prefix /where/to/install/zope
    make
    make install

  Next, you need to create an "instance home", which contains
  configuration and data for a Zope server process:

    /where/to/install/zope/bin/mkzopeinstance /location/of/zope/instance

  The Zope server can now be started using this command:

    /location/of/zope/instance/bin/runzope

  Notes

    * You need to be using Python 2.2.2 or later to run the build
      scripts; the ./configure script will attempt to locate the best
      available interpreter.  All future invocations of Zope will use
      that Python interpreter.

    * The Python you run Zope with *must* have threads compiled in,
      which is the case for a vanilla build.  Warning: Zope will not
      run with a Python version that uses libpth.  You *must* use
      libpthread.

    * To build Python extensions you need to have Python configuration
      information available. If your Python comes from an RPM you may
      need the python-devel (or python-dev) package installed too. If
      you built Python from source all the configuration information
      should already be available.

    * If you just want to use Zope components it's not necessary to
      build Zope but it's a good idea since it will compile Python C
      extensions for you.

    * See CHANGES.txt for important notes on this version of Zope.

    * You can run the 'configure' command outside of the Zope source
      tree.  If you do so, the makefile and the files generated by the
      build process will be written to the directory from which you
      run 'configure'.  You can then use 'make install' to install these
      files to their canonical locations.  This is to support
      source locations which are not writable.

Integrating Zope with an existing webserver

  Zope doesn't require any existing webserver to run, but you can
  integrate it with other webservers as necessary.  See the
  WEBSERVERS.txt file for more information about configuring Zope with
  an existing web server.

