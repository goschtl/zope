Testing legacy browser views
============================

This test tests publishing aspects of browser pages.  Let's register
some:

  >>> import Products.Five.browser.tests
  >>> from Products.Five import zcml
  >>> zcml.load_config("configure.zcml", Products.Five)
  >>> zcml.load_config('aqlegacy.zcml', package=Products.Five.browser.tests)

  >>> from Products.Five.testbrowser import Browser
  >>> browser = Browser()
  >>> browser.handleErrors = False

Acquisition API legacy on BrowserView
-------------------------------------

Let's make sure that accessing those old aq_* properties on browser
views still works (the printed output is the aq_chain of the view):

  >>> browser.open('http://localhost/test_folder_1_/attributes')
  >>> print browser.contents
  [<Products.Five.metaclass.LegacyAttributes object at ...>, <Folder at /test_folder_1_>, <Application at >, <ZPublisher.BaseRequest.RequestContainer object at ...>]

Let's also make sure that calling __of__ on a view has the desired
effect.  First let's get a view:

  >>> from zope.component import getMultiAdapter
  >>> from zope.publisher.browser import TestRequest
  >>> request = TestRequest()
  >>> view = getMultiAdapter((self.folder, request), name='attributes')

Let's try the __of__ protocol:

  #>>> view = view.__of__(self.app)
  #>>> view.aq_parent == self.folder
  #False
  #>>> view.aq_parent == self.app
  #True

Mixing in Acquisition.{Ex|Im}plicit
-----------------------------------

Let's make sure that mixing in Acquisition.Explicit or Implicit won't
mess up your views (even though you should never have done it in the
first place...):

  >>> browser.open('http://localhost/test_folder_1_/explicit')
  >>> print browser.contents
  Explicit

  >>> browser.open('http://localhost/test_folder_1_/explicit_zcmltemplate')
  >>> print browser.contents
  <p>The falcon has taken flight</p>

  >>> browser.open('http://localhost/test_folder_1_/explicit_template')
  >>> print browser.contents
  <p>The falcon has taken flight</p>

  >>> browser.open('http://localhost/test_folder_1_/implicit')
  >>> print browser.contents
  Implicit

  >>> browser.open('http://localhost/test_folder_1_/implicit_template')
  >>> print browser.contents
  <p>The falcon has taken flight</p>

  >>> browser.open('http://localhost/test_folder_1_/implicit_zcmltemplate')
  >>> print browser.contents
  <p>The falcon has taken flight</p>


Clean up
--------

  >>> from zope.app.testing.placelesssetup import tearDown
  >>> tearDown()
