Future

  New Features

    - (__future__) Exposed role management for manager users on the
      default roster:  managers can now "promote" members without going
      to the ZMI.

    - (__future__) Added "custom schema" mechanism for content objects:
      site managers can now define additional propertysheets for a
      content type, which will then be reflected in instances created
      from the type.

    - (__future__) Added simple link extraction / checking for textual
      content.  Link checking also works for Link objects.

    - (__future__) Added "composite content" types (see the "dogbowl
      proposal",
      (http://cmf.zope.org/rqmts/proposals/compounds/compoundproposal.txt).

    - (__future__) Added DCWorkflow (through-the-web configurable
      workflows) to the core set of CMF products.

CMF 1.4 alpha

  New Features

    - zpt skins (CMFDefault): Added i18n attributes.
      See INSTALL.txt for installing internationalization support.
      (Collector #122, thanks to Gitte Wange for her contribution)

    - zpt skins (CMFDefault): Added 'zpt_content/transition_form.pt'.
      'content_*_form.pt' now use this template.

    - skins (CMFDefault): Made scripts independent of submit button 'values'.

    - utils: Changed behavior of 'StrippingParser' and 'scrubHTML'.
      They now close empty tags.
      (Collector #108, thanks to 'tanghus' for the patch)

    - Added .css to the extensions that create FSFile objects in
      DirectoryViews (see CMFCore/FSFile.py)
      All sites upgrading which expected css extension to be dropped and to
      contain DTML will be required to rename their css files to foo.dtml.
      (Collector #129)

    - Added .js to the extensions that create FSFile objects in
      DirectoryViews

    - MembershipTool (CMFDefault): Un-hardwired members folder.
      You now can get the members folder object using 'getMembersFolder()'.
      If you want to change the id of the members folder, rename the folder
      and set the members folder using portal_membership's configuration tab.
      (Collector #128)

    - utils: Changed behavior of 'bodyfinder' and 'html_headcheck'.
      The head check in html_headcheck is now a bit different, but the result
      should be closer to what people expect.
      The head check in bodyfinder is removed. In most cases you want to call
      bodyfinder only if html_headcheck is true.

    - Cleaned up Interfaces and API Help (Collector #96):

      o  Removed redundant 'Syndicatable' and 'IndexableContent' interfaces.

      o  Removed unfixable 'Membership' and 'ReviewableContent' interfaces.

      o  Removed listActions() from 'Contentish' and 'portal_workflow'
         interface.

      o  Removed redundant or 'None' overriding of listActions().

      o  Updated all interfaces to work with new Zope 2.6 Interface API.

      o  Added 'portal_properties' and 'Dynamic' interfaces.

      o  Added many interface implementation tests and made them pass.

    - Removed deprecated 'register' module and 'PortalContentRegistration'
      interface.

    - Moved URLTool to CMFCore. Added interface and basic tests.
      (Collector #67)

    - Added FSFile skin object, in order to allow .swf files (et al.) in 
      skins

    - Added 'listMetaTags' skin method, which filters the DublinCore
      metadata into a form suitable for inclusion as <meta> tags.

    - Protected the Pending review action in DefaultWorkflow by
      ReviewPortalContent (Collector #52).

  Bug Fixes

    - Action providers: Default _actions' are now tuples, not lists.
      (Collector #123)

    - Document: Ensured that 'edit()' and 'PUT()' strip of xhtml headers and
      html headers including DOCTYPE declarations. (Collector #41)

    - Fixed some minor buglets. (Collector #80, #94 and #95)

    - Ensure that a couple of calls to string.split only split into a 
      maximum of two parts. 
      (Collector #82)

    - Enabled the CMF to be installed in a PRODUCTS_PATH.
      In doing so, also made it easier to move CMF sites between 
      Windows and Unix.
      (Collector #64)

    - Multimodule checkin to convert calls from user.getUserName() to
      user.getId() where appropriate.  User names should not be used
      as immutable references, while user ids should.  The distinction
      is not clearly enforcd in the stock user folder or any current user
      folder implementations, but newer user folder implementations
      will rely upon it.

    - Remove redundant VERSION.txt files;  the canonical spelling is
      'version.txt' (Collector #13).
