1.2 alpha

 New features

  - (__future__) Added docs from the crack ZC docs guys.

  - (__future__) Exposed role management for manager users on
    the default roster:  managers can now "promote" members
    without going to the ZMI.

  - (__future__) Added "custom schema" mechanism for content
    objetcts:  site managers can now define additional
    propertysheets for a content type, which will then be
    reflected in instances created from the type.

  - (__future__) Added simple link extraction / checking for
    textual content.  Link checking also works for Link objects.

  - (__future__) Added "compound content" types (see the
    "dogbowl proposal",
    (http://cmf.zope.org/rqmts/proposals/compounds/compoundproposal.txt).

  - (__future__) Made global actions emitted by ActionsTool
    configurable through-the-web.

  - (__future__) Fleshed out CMFDecor product, which adds Zope
    Page Templates skins to the CMFSite and content objects of
    CMFDefault; added CMFDecor to the core set of CMF products.

    Note that the CMFDecor skin is the one which will be
    receiving all our development focus:  we will fix bugs in the
    DTML skins, but are not likely to invest significant effort
    in upgrading it.

  - (__future__) Added DCWorkflow (through-the-web configurable
    workflows) to the core set of CMF products.

  - (__future__) Merged Chris Withers' FSSQLMethod into CMFCore.

  - Perform permission checking inside personalize_form to make
    sure Anonymous cannot access it without logging in (CMF Tracker
    Issue 349, thanks go to Bill Anderson)

  - The Member Data Tool now uses an OOBTree instead of the old-style
    BTree to store member data wrappers (CMF Tracker 375)

  - Added initial CMF use cases as FSSTXMethods in CMFDefault/help.

  - Made validation methods of 'portal_metadata' available to
    scripts.

  - Made skinned 'index_html' reflect generic view on folder
    content, rather than simple title/description of the portal.

  - Added "Change and View" submit button to content editing
    forms;  added check for this button to POST handlers in CMFDefault,
    and indirected redirect targets in those methods through
    'getActionByID'.

  - Added knob for skin cookie persistence to SkinsTool's
    "properties" tab.  The default policy (unchanged) is that
    skin cookies expire at the end of the browser session.  if
    Skin Cookie Persistence is checked the cookie will last a
    full yesr.

  - Added an API to the 'portal_actions' interface for querying,
    adding, and removing action providers.

  - Added a "multi-review" form, enabling a reviewer to publish
    or reject multiple items at once, using a common comment.

  - Added ZMI tab to DirectoryView to allow re-basing the
    filesystem path.

  - Added "breadcrumbs" to CMFDecor skins.

  - Added initial support for WebDAV locaking to PortalContent.

  - Added SortCriterion to list of criterion types for Topics,
    to permit sorting of results.

  - Added "Local Roles" action to folders to ease collaboration.

  - Add scarecrow assertions for the CMF-centric interfaces, and
    made the actual interfaces compatible with the standard
    Zope Interface package.

  - Made FSSTXMethod display skinnable, and added ZPT version.

  - Added 'visible' attribute to TypeInformation actions, to
    permit indirection (via 'getActionById') without exposing the
    action in the CMF UI.

  - Extended MetadataTool to allow adding / removing element specs
    (i.e., it can now manage policies for "custom" schemas, as
    well as Dublin Core).

 Bug fixes

  - Refactored getDefaultView into CMFCore.utils._getView;
    can now specify a view to get by name.

  - Removed an infinite loop condition that arises when
    MembershipTool.createMemberArea gets called inside wrapUser
    (this could only happen if "Create Member Area" was checked
    in the Membership tool.)

  - Added new 'TitleOrId' skin method, and updated skins to
    depend on it rather than SimpleItem.title_or_id.

  - Made unit tests runnable without reliance on 'zctl test'.

  - Corrected initial column set in catalog to include
    "ModificationDate" instead of "ModifiedDate".

  - Ensure that object is recatalogued (e.g., after setting 'portal_type'
      (thanks to Florent Guillaume)

  - Removed silly dependency of 'CatalogTool.searchResults' on
    REQUEST (catalog already does the Right Thing (tm) when no
    REQUEST is available).  Note that this requires updates to
    the 'search' skins, as they didn't pass it in.

  - Changed redirect target after rejecting an item to the search
    page for pending content items;  this resolves the problem
    that the non-Manager reviewr who rejects an item no longer
    has View permission on it, and therefore gets an Unauthorized
    when redirecting to the object's view action.

  - Moved generation of the "Add to Favorites" and "My Favorites"
    links from the CMFCore/ActionsTool into the
    CMFDefault/MembershipTool, which is a more logical location
    for it because it relies on information from the membership tool.

  - Made Topic directly publishable (like PortalContent), using its
    'view' action (or the first action found, if view is not present).

  - Set title for newly-created member folders;  fixes
    breadcrumbs that expect a title on the object.

  - Allow URLs with query strings in StructuredText links.

  - Update 'news_box' to search based on 'Type', rather than
    'meta_type'.

  - Fix 'SkinnedFolder.Creator()' to call 'getOwner()' with
    info argument.

  - Made CookieCrumbler check for 'WEBDAV_SOURCE_PORT'
    environment variable (supplied by Zope 2.4.1+), and bail on
    intercepting authentication if found.

  - Included 'Owner' in list of significant roles returned by
    'MembershipTool.getPortalRoles' (e.g., so that the
   "Local Roles" interface can allow assignment of it).

  - Allow users with local role of "Reviewer" to see the "pending
    review" action.

  - Made TypesTool, rather than individual type objects,
    responsible for generating "immediate view" URL;  type
    objects now return the newly-created object, which makes
    scripting them much simpler.

  - Remove fossilized reference to 'getSecurityManager' from
    'PortalContent._verifyActionPermissions'.

  - Modified the redirect after "Add to Favorites" to us the
    view action, rather than 'view'.

  - Fixed 'Document.guessFormat()' to use
    'utils.html_headcheck()' instead of 'bodyfinder' regex to
    detect structured text versus html;  avoids recursion limit
    for large HTML files.

  - Removed spurious 'afterCreate' protocol for content objects.

  - Added mapping of 'css' file extension to FSDTMLMethods.

  - Modifed PortalFolder.listFolderContents to handle
    permission-based filtering; duplicates what skip_unauthorized
    is doing in DocumentTemplate/DT_IN.py (but works for ZPT as
    well).

  - Modified CMFDefault.RegistrationTool.addMember to avoid
    flunking validation if properties are not passed (Tracker
    #335).

  - Applied patch from Chris Withers to 'register' skin method;
    the patch which avoids quoting problems for the error message
    if a problem occurs (Tracker #339).

  - Added 'DiscussionItem.replyCount' (Tracker #328).
    'DiscussionItem.hasReplies' now returns only a boolean value.
    Standard skins don't call 'replyCount' due to performance
    concerns.

  - Factored content filtering logic into a Python Script.

  - Improved handling of multiple rename targets (thanks to Chris
    Withers for the patch.)

  - Completed conversion of form targets from DTML Methods to
    Python Scripts.

  - Improved compatibility with Zope 2.4:

    o support for new "restricted execution" mode;

    o support for new catalog initialization API.
  
    o updated 'test_all' unit test drivers to use standard
      'unittest' module from Python 2.1 (it no longer has
      'JUnitTestTextRunner' class).
