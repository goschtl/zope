1.2 alpha

 New features

  - (__future__) Exposed role management for manager users on
    the default roster:  managers can now "promote" members
    without going to the ZMI.

  - (__future__) Added "custom schema" mechanism for content
    objetcts:  site managers can now define additional
    propertysheets for a content type, which will then be
    reflected in instances created from the type.

  - (__future__) Added simple link extraction / checking for
    textual content.  Link checking also works for Link objects.

  - (__future__) Added "compound content" types (see the
    "dogbowl proposal",
    (http://cmf.zope.org/rqmts/proposals/compounds/compoundproposal.txt).

  - (__future__) Made global actions emitted by ActionsTool
    configurable through-the-web.

  - (__future__) Fleshed out CMFDecor product, which adds Zope
    Page Templates skins to the CMFSite and content objects of
    CMFDefault; added CMFDecor to the core set of CMF products.

    Note that the CMFDecor skin is the one which will be
    receiving all our development focus:  we will fix bugs in the
    DTML skins, but are not likely to invest significant effort
    in upgrading it.

  - (__future__) Added DCWorkflow (through-the-web configurable
    workflows) to the core set of CMF products.

  - Added ZMI tab to DirectoryView to allow re-basing the
    filesystem path.

  - Added "breadcrumbs" to CMFDecor skins.

  - Added initial support for WebDAV locaking to PortalContent.

  - Added SortCriterion to list of criterion types for Topics,
    to permit sorting of results.

  - Added "Local Roles" action to folders to ease collaboration.

  - Add scarecrow assertions for the CMF-centric interfaces, and
    made the actual interfaces compatible with the standard
    Zope Interface package.

  - Made FSSTXMethod display skinnable, and added ZPT version.

  - Added 'visible' attribute to TypeInformation actions, to
    permit indirection (via 'getActionById') without exposing the
    action in the CMF UI.

  - Extendd MetadataTool to allow adding / removing element specs
    (i.e., it can now manage policies for "custom" schemas, as
    well as Dublin Core).

 Bug fixes

  - Ensure that object is recatalogued (e.g., after setting 'portal_type'
      (thanks to Florent Guillaume)

  - Made Topic directly publishable (like PortalContent), using its
    'view' action (or the first action found, if view is not present).

  - Set title for newly-created member folders;  fixes
    breadcrumbs that expect a title on the object.

  - Allow URLs with query strings in StructuredText links.

  - Update 'news_box' to search based on 'Type', rather than
    'meta_type'.

  - Fix 'SkinnedFolder.Creator()' to call 'getOwner()' with
    info argument.

  - Made CookieCrumbler check for 'WEBDAV_SOURCE_PORT'
    environment variable (supplied by Zope 2.4.1+), and bail on
    intercepting authentication if found.

  - Included 'Owner' in list of significant roles returned by
    'MembershipTool.getPortalRoles' (e.g., so that the
   "Local Roles" interface can allow assignment of it).

  - Allow users with local role of "Reviewer" to see the "pending
    review" action.

  - Made TypesTool, rather than individual type objects,
    responsible for generating "immediate view" URL;  type
    objects now return the newly-created object, which makes
    scripting them much simpler.

  - Remove fossilized reference to 'getSecurityManager' from
    'PortalContent._verifyActionPermissions'.

  - Modified the redirect after "Add to Favorites" to us the
    view action, rather than 'view'.

  - Fixed 'Document.guessFormat()' to use
    'utils.html_headcheck()' instead of 'bodyfinder' regex to
    detect structured text versus html;  avoids recursion limit
    for large HTML files.

  - Removed spurious 'afterCreate' protocol for content objects.

  - Added mapping of 'css' file extension to FSDTMLMethods.

  - Modifed PortalFolder.listFolderContents to handle
    permission-based filtering; duplicates what skip_unauthorized
    is doing in DocumentTemplate/DT_IN.py (but works for ZPT as
    well).

  - Modified CMFDefault.RegistrationTool.addMember to avoid
    flunking validation if properties are not passed (Tracker
    #335).

  - Applied patch from Chris Withers to 'register' skin method;
    the patch which avoids quoting problems for the error message
    if a problem occurs (Tracker #339).

  - Added 'DiscussionItem.replyCount' (Tracker #328).
    'DiscussionItem.hasReplies' now returns only a boolean value.
    Standard skins don't call 'replyCount' due to performance
    concerns.

  - Factored content filtering logic into a Python Script.

  - Improved handling of multiple rename targets (thanks to Chris
    Withers for the patch.)

  - Completed conversion of form targets from DTML Methods to
    Python Scripts.

  - Improved compatibility with Zope 2.4:

    o support for new "restricted execution" mode;

    o support for new catalog initialization API.
  
    o updated 'test_all' unit test drivers to use standard
      'unittest' module from Python 2.1 (it no longer has
      'JUnitTestTextRunner' class).
