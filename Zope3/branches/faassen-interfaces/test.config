# test.config: options for Zope Test Runner.
# Use this file to set Test Runner options that you would
# otherwise set at the command line.

# LEVEL=<int>
# Run the tests at the given level.  See -a, --all.
# LEVEL = 1

# BUILD=<boolean>
# Build extensions before testing. See -b.
# BUILD = False

# BUILD=<boolean>
# Build extensions before testing. See -b.
# BUILD = False

# BUILD_INPLACE=<boolean>
# With BUILD==True, tests will be run from src directory.
# See -B.
# BUILD_INPLACE = False

# PYCHECKER=<boolean>
# Use pychecker. See -c.
# PYCHECKER = False

# DEBUG=<boolean>
# Run a debug version of test harness.
# See -d.
# DEBUG = False

# DEBUGGER=<boolean>
# whether to post-mortem with pdb.
# See -D.
# DEBUGGER = False

# RUN_UNIT=<boolean>
# RUN_FUNCTIONAL=<boolean>
# Whether to run functional tests and/or unit tests.
# Default behaviour is RUN_UNIT and RUN_FUNCTIONAL.
# RUN_UNIT = True
# RUN_FUNCTIONAL = True

# GC_THRESHOLD=<None>|<int>
# Set the garbage collection threshold.
# See -g.
# GC_THRESHOLD = None

# GC_FLAGS=<list-of-str>
# list of garbage collection flags to set.
# See -G.
# GC_FLAGS = []

# KEEP_STALE_BYTECODE=<boolean>
# Do not delete all stale bytecode before running tests.
# See -k.

# LIBDIR=<dirpath>
# Search for tests starting in the specified start directory.
# See -l.
# LIBDIR = '/path/to/dir/'

# LOOP=<boolean>
# Keep running the selected tests in a loop.
# See -L.
# LOOP = False

# PROGRESS=<boolean>
# Show running PROGRESS.  It can be combined with -v or -vv.
# See -p.
# PROGRESS = False

# REFCOUNT=<boolean>
# Look for refcount problems.
# See -r.
# REFCOUNT = False

# TRACE=<boolean>
# Use the trace module from Python for code coverage.
# See -T.
# TRACE = False

# TIMETESTS=<int>
# Time the individual tests and print a list of the top <int>, sorted from
# longest to shortest.
# See -t (which sets TIMETESTS=50).
# TIMETESTS = 0

# TIMESFN=<filepath>
# File to which to write timing information.
# See -t.
# TIMESFN = '/path/to/file'

# VERBOSE=<int>
# Verbosity level. Set VERBOSE=0 for quiet.
# VERBOSE = 0

# TEST_DIRS=<list>
# List of paths, limiting where tests are searched for.
# See --dir.
# TEST_DIRS = ['/path/to/tests/']

# GUI=<boolean>|"minimal"
# Whether to run unittest GUI. Use string value "minimal" for the minimal GUI.
# GUI = False


# MODULE_FILTER=<str>
# Regular expression (in string format) for matching test module paths
# MODULE_FILTER = None

# TEST_FILTER=<str>
# Regular expression (in string format) for matching test names
# TEST_FILTER = None
