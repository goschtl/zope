pages

  File zope/app/publisher/browser/meta.zcml, lines 60 - 71.

  Handler: zope.app.publisher.browser.viewmeta.pages

  Define multiple pages without repeating all of the parameters.

  The pages directive allows multiple page views to be defined without
  repeating the 'for', 'permission', 'class', 'layer', 'allowed_attributes',
  and 'allowed_interface' attributes.

  Attributes

    permission -- Permission (optional, default=None)

      Permission

      The permission needed to use the view.

    class -- GlobalObject (optional, default=None)

      Class

      A class that provides attributes used by the view.

    layer -- TextLine (optional, default=None)

      The layer the view is in.

      A skin is composed of layers. It is common to put skin specific views in
      a layer named after the skin. If the 'layer' attribute is not supplied,
      it defaults to 'default'.

    allowed_interface -- Tokens (optional, default=None)

      Interface that is also allowed if user has permission.

      By default, 'permission' only applies to viewing the view and any
      possible sub views. By specifying this attribute, you can make the
      permission also apply to everything described in the supplied interface.

      Multiple interfaces can be provided, separated by whitespace.

    allowed_attributes -- Tokens (optional, default=None)

      View attributes that are also allowed if user has permission.

      By default, 'permission' only applies to viewing the view and any
      possible sub views. By specifying 'allowed_attributes', you can make the
      permission also apply to the extra attributes on the view object.

    for -- GlobalObject (optional, default=None)

      The interface this view is for.

      


  Subdirectives

    page

      File zope/app/publisher/browser/meta.zcml, lines 66 - 69.

      Handler: zope.app.publisher.browser.viewmeta.page

      Subdirective to IPagesDirective

      Attributes

        name -- TextLine (required)

          The name of the page (view)

          The name shows up in URLs/paths. For example 'foo' or 'foo.html'.
          This attribute is required unless you use the subdirective 'page' to
          create sub views. If you do not have sub pages, it is common to use
          an extension for the view name such as '.html'. If you do have sub
          pages and you want to provide a view name, you shouldn't use
          extensions.

        template -- TextLine (optional, default=None)

          The name of a page template.

          Refers to a file containing a page template (must end in extension
          '.pt').

        attribute -- PythonIdentifier (optional, default=None)

          The name of an attribute to publish.

          This is used to publish an attribute provided by a class, instead of
          a template.

          This is the attribute, usually a method, to be published as the page
          (view). The default is "__call__".

        menu -- TextLine (optional, default=None)

          The browser menu to include the page (view) in.

          Many views are included in menus. It's convenient to name the menu
          in the page directive, rather than having to give a separate
          menuItem directive.

        title -- MessageID (optional, default=None)

          The browser menu label for the page (view)

          This attribute must be supplied if a menu attribute is supplied.

