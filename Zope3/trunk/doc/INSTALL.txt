Building and installing Zope from source
----------------------------------------

  This document describes building and installing Zope3 on Unix.
  We will provide Windows instructions in later releases. We
  will also provide binary releases for some platforms.

Important notes

   ZOPE 3 REQUIRES PYTHON 2.2.1!

Quick Start

  The following commands should get you up and running with the
  development version of Zope3 on Unix:

    * If you have not yet checked out the CVS tree, do so::

         cvs -d:pserver:anonymous@cvs.zope.org:/cvs-repository login
         cvs -d:pserver:anonymous@cvs.zope.org:/cvs-repository co Zope3

      Press return when prompted for a password.

    * Make sure you have expat-1.95.2 installed (the easiset way to do
      this is to install pyxml 0.7.0 (*not* 0.7.1, it's broken).

    * cd Zope3

    * python stupid_build.py

    * Copy principals.zcml.in to principals.zcml, and add a manager
      entry to it based on the examples in sample_principals.zcml.

    * python z3.py

  You should shortly see logging messages indicating Zope3 is listening on
  port 8080.  At that point you can connect to Zope3 by directing
  your browser to::
      
     http://yourhost:8080

  where yourhost is the name or address of the machine running Zope 3.

  You will be prompted for a user name and password. Use the user name
  and password you entered into your principals.zcml file.

  Now you're off and running! 

Resources
  
  If you haven't used Zope3 before, you should head to the Zope web site
  and read some documentation. The Zope3PythonProgrammersTutorial is a good
  place to start.  You can access it on the Zope site at::
  
    http://dev.zope.org/Wikis/DevSite/Projects/ComponentArchitecture/ProgrammerTutorial

  You will also find some additional documentation in the 'doc'
  directory of the Zope3 tree, where this file lives.  All other
  existing Zope3 documentation is linked from somewhere in the Zope
  project Wiki:

    'http://dev.zope.org/Wikis/DevSite/Projects/ComponentArchitecture'

  You may also want to subscribe to the Zope3-dev mailing list::

    http://lists.zope.org/mailman/listinfo/zope3-dev
  
  Have fun!

Random Details
  
    * There are some python scripts in the top-level directory that will help
      you track changes during the development process.  Specifically,
      'stupid_clean.py' should be run before you do a new 'stupid_build.py'
      when you are doing a cvs update of your checkout, and 'test.py' will
      run all of the unit tests (see UNITTEST.txt in the doc directory for more
      information on unit tests).

    * You should be using Python 2.2.1 or later to run anything related to Zope3.

    * The python you run Zope with *must* have threads compiled in,
      which is *not* the case for a vanilla build.  When you build the
      python you'll use, 'configure --with-threads' does the right thing.
      Warning: Zope will not run with a Python version that uses libpth.
      You *must* use libpthread.

    * To build python extensions you need to have Python configuration
      information available. If your Python comes from an RPM you may need
      the python-devel package installed too. If you built Python from source
      all the configuration information should already be there.

    * If you just want to use Zope components it's not necessary to build Zope
      but it's a good idea since it will compile Python C extensions for you.
