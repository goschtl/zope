============================================================
Things to do for the next release (in no particular order)
============================================================

- Distribution, packaging an installation system.  Fred is working on
  a prototype. This will eventually inclide Zope-2 style installation,
  configuration and process management.

- Persistent interfaces

  These were broken (I think) by recent interface and adapter
  refactoring.

- Reorganize software into a much flatter package structure.

- Redo event service

  o Simplify publication/registration framework

  o Subscribe directly, rather than by path

  Note that, for now, we won't support local subscriptions.

- Change the way components are looked up locally:

  http://dev.zope.org/Zope3/FixedDefaultComponentLookup

- Partial adapters

  http://dev.zope.org/Zope3/PartialAdapters

- Minor refactoring of security context

  http://dev.zope.org/Zope3/UnificationOfRequestsAndSecurityContextsThroughUse

- Fix up presentation-component franeworks to use presentation
  components registered by interface.

- Minor refactoring of adapter service to make it fast to find 
  all names for adapters from/to a given interface

- Redo utility service

- Restructure registration framework to use direct references rather
  than paths.

- Finish location-relevent event work;
  specifically, handling events on containers.  

  See:
   http://dev.zope.org/Zope3/LocationRelatedEvents

- Finish http://dev.zope.org/Zope3/ComponentArchitectureSimplification

  What remains is the section "Utilities everywhere".

  - Caching (Naveen is working on this)

  - Query

- Implement tools:

  http://dev.zope.org/Zope3/TheBrowserToolDirective

- Rework undo

  Simplify the undo model. Two kinds of undo:

  * Undo my changes

  * Undo everybody

  * Undo optionally takes place into account.

  * Should be an undo last. 

  Make sure we handle multiple undos properly.

- Finish "process control", specifically shutting down and restarting
  via the web.  The main issue here is plumbing.  How to get the
  signal from the UI to the server logic. The way to do this is via
  events. The UI should generate some sort of ShutdownRequest event
  and code in the server should be subscribed. Care needs to be taken
  to assure that only privileged users can generate these events.

- Sort out "usage". The basic idea is very simple, but the 
  implementation is too implicit and complex.

